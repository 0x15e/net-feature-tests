[
  {
    "name": "AutoMapper",
    "url": "http://automapper.org",
    "version": "3.3.1",
    "supports": [
      "net40",
      "net45",
      "win80",
      "wp80",
      "wpa81",
      "sl50",
      "MonoAndroid",
      "MonoTouch"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "success"
      },
      "Int32ToString": {
        "result": "success"
      },
      "Int32ToInt64": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\r\n    \r\n    Mapping types:\r\n    Int32 -> Int64\r\n    System.Int32 -> System.Int64\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    123\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\r\n\r\nMapping types:\r\nInt32 -> Int64\r\nSystem.Int32 -> System.Int64\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\n123\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "Int32ToDecimal": {
        "result": "success"
      },
      "ByteToInt32": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\r\n    \r\n    Mapping types:\r\n    Byte -> Int32\r\n    System.Byte -> System.Int32\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    123\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\r\n\r\nMapping types:\r\nByte -> Int32\r\nSystem.Byte -> System.Int32\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\n123\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "Int16ToInt32": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\r\n    \r\n    Mapping types:\r\n    Int16 -> Int32\r\n    System.Int16 -> System.Int32\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    123\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\r\n\r\nMapping types:\r\nInt16 -> Int32\r\nSystem.Int16 -> System.Int32\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\n123\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "StringToInt32": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\r\n    \r\n    Mapping types:\r\n    String -> Int32\r\n    System.String -> System.Int32\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    123\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\r\n\r\nMapping types:\r\nString -> Int32\r\nSystem.String -> System.Int32\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\n123\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "ObjectToInt32": {
        "result": "success"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "success"
      },
      "Int32ToNullableInt32": {
        "result": "success"
      },
      "Int32ToNullableInt64": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: \r\n    \r\n    Mapping types:\r\n    Int32 -> Nullable`1\r\n    System.Int32 -> System.Nullable`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    5 ---> System.InvalidCastException: Specified cast is not valid.\r\n       at lambda_method(Closure , Object , Object )\r\n       at AutoMapper.Impl.PropertyAccessor.SetValue(Object destination, Object value)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.AssignValue(PropertyMap propertyMap, Object mappedObject, Object propertyValueToAssign)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       --- End of inner exception stack trace ---\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: \r\n\r\nMapping types:\r\nInt32 -> Nullable`1\r\nSystem.Int32 -> System.Nullable`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\n5 ---> System.InvalidCastException: Specified cast is not valid.\r\n   at lambda_method(Closure , Object , Object )\r\n   at AutoMapper.Impl.PropertyAccessor.SetValue(Object destination, Object value)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.AssignValue(PropertyMap propertyMap, Object mappedObject, Object propertyValueToAssign)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   --- End of inner exception stack trace ---\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "NullableInt32ToNullableInt64": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: \r\n    \r\n    Mapping types:\r\n    Int32 -> Nullable`1\r\n    System.Int32 -> System.Nullable`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    5 ---> System.InvalidCastException: Specified cast is not valid.\r\n       at lambda_method(Closure , Object , Object )\r\n       at AutoMapper.Impl.PropertyAccessor.SetValue(Object destination, Object value)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.AssignValue(PropertyMap propertyMap, Object mappedObject, Object propertyValueToAssign)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       --- End of inner exception stack trace ---\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: \r\n\r\nMapping types:\r\nInt32 -> Nullable`1\r\nSystem.Int32 -> System.Nullable`1[[System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\n5 ---> System.InvalidCastException: Specified cast is not valid.\r\n   at lambda_method(Closure , Object , Object )\r\n   at AutoMapper.Impl.PropertyAccessor.SetValue(Object destination, Object value)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.AssignValue(PropertyMap propertyMap, Object mappedObject, Object propertyValueToAssign)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   --- End of inner exception stack trace ---\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "NullNullableInt32ToNullObject": {
        "result": "success"
      },
      "NullObjectToNullNullableInt32": {
        "result": "success"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: \r\n    \r\n    Mapping types:\r\n    DateTime -> Nullable`1\r\n    System.DateTime -> System.Nullable`1[[System.DateTimeOffset, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    11/22/2014 1:45:07 PM ---> System.InvalidCastException: Specified cast is not valid.\r\n       at lambda_method(Closure , Object , Object )\r\n       at AutoMapper.Impl.PropertyAccessor.SetValue(Object destination, Object value)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.AssignValue(PropertyMap propertyMap, Object mappedObject, Object propertyValueToAssign)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       --- End of inner exception stack trace ---\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: \r\n\r\nMapping types:\r\nDateTime -> Nullable`1\r\nSystem.DateTime -> System.Nullable`1[[System.DateTimeOffset, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\n11/22/2014 1:45:07 PM ---> System.InvalidCastException: Specified cast is not valid.\r\n   at lambda_method(Closure , Object , Object )\r\n   at AutoMapper.Impl.PropertyAccessor.SetValue(Object destination, Object value)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.AssignValue(PropertyMap propertyMap, Object mappedObject, Object propertyValueToAssign)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   --- End of inner exception stack trace ---\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: \r\n    \r\n    Mapping types:\r\n    DateTime -> Nullable`1\r\n    System.DateTime -> System.Nullable`1[[System.DateTimeOffset, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    11/22/2014 1:45:07 PM ---> System.InvalidCastException: Specified cast is not valid.\r\n       at lambda_method(Closure , Object , Object )\r\n       at AutoMapper.Impl.PropertyAccessor.SetValue(Object destination, Object value)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.AssignValue(PropertyMap propertyMap, Object mappedObject, Object propertyValueToAssign)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       --- End of inner exception stack trace ---\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: \r\n\r\nMapping types:\r\nDateTime -> Nullable`1\r\nSystem.DateTime -> System.Nullable`1[[System.DateTimeOffset, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\n11/22/2014 1:45:07 PM ---> System.InvalidCastException: Specified cast is not valid.\r\n   at lambda_method(Closure , Object , Object )\r\n   at AutoMapper.Impl.PropertyAccessor.SetValue(Object destination, Object value)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.AssignValue(PropertyMap propertyMap, Object mappedObject, Object propertyValueToAssign)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   --- End of inner exception stack trace ---\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "EnumToEnumSameItemName": {
        "result": "success"
      },
      "EnumToEnumFlags": {
        "result": "success"
      },
      "EnumInt64ToEnumInt32": {
        "result": "success"
      },
      "EnumToNullableEnum": {
        "result": "success"
      },
      "StringToEnum": {
        "result": "success"
      },
      "CollectionToEnumerable": {
        "result": "success"
      },
      "EnumerableToCollection": {
        "result": "success"
      },
      "CollectionToReadOnlyCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "success"
      },
      "ListToEnumerable": {
        "result": "success"
      },
      "EnumerableToList": {
        "result": "success"
      },
      "ListToCollection": {
        "result": "success"
      },
      "CollectionToList": {
        "result": "success"
      },
      "ListToReadOnlyCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToList": {
        "result": "success"
      },
      "ListToReadOnlyList": {
        "result": "success"
      },
      "ReadOnlyListToList": {
        "result": "success"
      },
      "EnumerableToReadOnlyList": {
        "result": "success"
      },
      "SetToEnumerable": {
        "result": "success"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: \r\n    \r\n    Mapping types:\r\n    Int32[] -> ISet`1\r\n    System.Int32[] -> System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    System.Int32[] ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at AutoMapper.Mappers.CollectionMapper.EnumerableMapper`2.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       --- End of inner exception stack trace ---\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: \r\n\r\nMapping types:\r\nInt32[] -> ISet`1\r\nSystem.Int32[] -> System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\nSystem.Int32[] ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at AutoMapper.Mappers.CollectionMapper.EnumerableMapper`2.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   --- End of inner exception stack trace ---\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "SetToCollection": {
        "result": "success"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: \r\n    \r\n    Mapping types:\r\n    Int32[] -> ISet`1\r\n    System.Int32[] -> System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    System.Int32[] ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at AutoMapper.Mappers.CollectionMapper.EnumerableMapper`2.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       --- End of inner exception stack trace ---\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: \r\n\r\nMapping types:\r\nInt32[] -> ISet`1\r\nSystem.Int32[] -> System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\nSystem.Int32[] ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at AutoMapper.Mappers.CollectionMapper.EnumerableMapper`2.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   --- End of inner exception stack trace ---\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "SetToList": {
        "result": "success"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    AutoMapper.AutoMapperMappingException: \r\n    \r\n    Mapping types:\r\n    Int32[] -> ISet`1\r\n    System.Int32[] -> System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n    \r\n    Destination path:\r\n    Wrapper`1.Value.Value\r\n    \r\n    Source value:\r\n    System.Int32[] ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at AutoMapper.Mappers.CollectionMapper.EnumerableMapper`2.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)\r\n       at AutoMapper.Mappers.EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       --- End of inner exception stack trace ---\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n       at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n       at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n       at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n       at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n       at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n    ",
        "error": "AutoMapper.AutoMapperMappingException: \r\n\r\nMapping types:\r\nInt32[] -> ISet`1\r\nSystem.Int32[] -> System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n\r\nDestination path:\r\nWrapper`1.Value.Value\r\n\r\nSource value:\r\nSystem.Int32[] ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at AutoMapper.Mappers.CollectionMapper.EnumerableMapper`2.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength)\r\n   at AutoMapper.Mappers.EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   --- End of inner exception stack trace ---\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.MapPropertyValue(ResolutionContext context, IMappingEngineRunner mapper, Object mappedObject, PropertyMap propertyMap)\r\n   at AutoMapper.Mappers.TypeMapObjectMapperRegistry.PropertyMapMappingStrategy.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.Mappers.TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper)\r\n   at AutoMapper.MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context)\r\n   at AutoMapper.MappingEngine.MapCore(Object source, Type sourceType, Type destinationType, MappingOperationOptions options)\r\n   at AutoMapper.MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source, Action`1 opts)\r\n   at AutoMapper.MappingEngine.Map[TDestination](Object source)\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Simple": {
        "result": "success"
      },
      "Nested": {
        "result": "success"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedFlattening": {
        "result": "success"
      },
      "NameBasedUnflattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "MethodToProperty": {
        "result": "success"
      },
      "GetMethodToProperty": {
        "result": "success"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "success"
      }
    }
  },
  {
    "name": "EasyMapper",
    "url": "http://pelusoftcodereference.wordpress.com/easy-mapper/",
    "version": "1.0.2",
    "supports": [
      "net45"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "Int32ToString": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "Int32ToInt64": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int32ToDecimal": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ByteToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int16ToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "StringToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ObjectToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   1/1/0001 12:00:00 AM +00:00\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   1/1/0001 12:00:00 AM +00:00\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int32ToNullableInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 5\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 5\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int32ToNullableInt64": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 5\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 5\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NullableInt32ToNullableInt64": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 5\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 5\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NullNullableInt32ToNullObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: (null)\r\n    Actual:   not set\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: (null)\r\nActual:   not set\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "NullObjectToNullNullableInt32": {
        "result": "success"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToEnumSameItemName": {
        "result": "success"
      },
      "EnumToEnumFlags": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: First, Second\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: First, Second\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumInt64ToEnumInt32": {
        "result": "success"
      },
      "EnumToNullableEnum": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "StringToEnum": {
        "result": "success"
      },
      "CollectionToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToReadOnlyCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToReadOnlyCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToReadOnlyList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyListToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToReadOnlyList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    System.ArgumentException: Property set method not found.\r\n       at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\n       at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, Object[] index)\r\n       at Pelusoft.EasyMapper.EasyMapper.Map[TDestination](Object sourceObj)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.ArgumentException: Property set method not found.\r\n   at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\n   at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, Object[] index)\r\n   at Pelusoft.EasyMapper.EasyMapper.Map[TDestination](Object sourceObj)\r\n   at lambda_method(Closure )\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    System.ArgumentException: Property set method not found.\r\n       at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\n       at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, Object[] index)\r\n       at Pelusoft.EasyMapper.EasyMapper.Map[TDestination](Object sourceObj)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.ArgumentException: Property set method not found.\r\n   at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\n   at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, Object[] index)\r\n   at Pelusoft.EasyMapper.EasyMapper.Map[TDestination](Object sourceObj)\r\n   at lambda_method(Closure )\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    System.ArgumentException: Property set method not found.\r\n       at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\n       at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, Object[] index)\r\n       at Pelusoft.EasyMapper.EasyMapper.Map[TDestination](Object sourceObj)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.ArgumentException: Property set method not found.\r\n   at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\n   at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, Object[] index)\r\n   at Pelusoft.EasyMapper.EasyMapper.Map[TDestination](Object sourceObj)\r\n   at lambda_method(Closure )\r\n"
      },
      "Simple": {
        "result": "failure",
        "comment": "    System.ArgumentException: GenericArguments[0], 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]', on 'TDestination Map[TDestination](System.Object)' violates the constraint of type 'TDestination'. ---> System.Security.VerificationException: Method Pelusoft.EasyMapper.EasyMapper.Map: type argument 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]' violates the constraint of type parameter 'TDestination'.\r\n       at System.RuntimeMethodHandle.GetStubIfNeeded(RuntimeMethodHandleInternal method, RuntimeType declaringType, RuntimeType[] methodInstantiation)\r\n       at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n       --- End of inner exception stack trace ---\r\n       at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n       at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n    ",
        "error": "System.ArgumentException: GenericArguments[0], 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]', on 'TDestination Map[TDestination](System.Object)' violates the constraint of type 'TDestination'. ---> System.Security.VerificationException: Method Pelusoft.EasyMapper.EasyMapper.Map: type argument 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]' violates the constraint of type parameter 'TDestination'.\r\n   at System.RuntimeMethodHandle.GetStubIfNeeded(RuntimeMethodHandleInternal method, RuntimeType declaringType, RuntimeType[] methodInstantiation)\r\n   at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n   at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.ArgumentException: GenericArguments[0], 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]', on 'TDestination Map[TDestination](System.Object)' violates the constraint of type 'TDestination'. ---> System.Security.VerificationException: Method Pelusoft.EasyMapper.EasyMapper.Map: type argument 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]' violates the constraint of type parameter 'TDestination'.\r\n       at System.RuntimeMethodHandle.GetStubIfNeeded(RuntimeMethodHandleInternal method, RuntimeType declaringType, RuntimeType[] methodInstantiation)\r\n       at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n       --- End of inner exception stack trace ---\r\n       at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n       at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n    ",
        "error": "System.ArgumentException: GenericArguments[0], 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]', on 'TDestination Map[TDestination](System.Object)' violates the constraint of type 'TDestination'. ---> System.Security.VerificationException: Method Pelusoft.EasyMapper.EasyMapper.Map: type argument 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]' violates the constraint of type parameter 'TDestination'.\r\n   at System.RuntimeMethodHandle.GetStubIfNeeded(RuntimeMethodHandleInternal method, RuntimeType declaringType, RuntimeType[] methodInstantiation)\r\n   at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n   at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedFlattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedUnflattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "MethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "GetMethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "failure",
        "comment": "    Xunit.Sdk.TrueException: Assert.True() Failure\r\n    ",
        "error": "Xunit.Sdk.TrueException: Assert.True() Failure\r\n"
      }
    }
  },
  {
    "name": "EmitMapper",
    "url": "http://emitmapper.codeplex.com",
    "version": "1.0.0",
    "supports": [
      "net35",
      "net40",
      "net45",
      "win80",
      "wp80",
      "wpa81",
      "sl30",
      "sl40",
      "sl50",
      "MonoAndroid",
      "MonoTouch"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   System.Object\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   System.Object\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "Int32ToString": {
        "result": "success"
      },
      "Int32ToInt64": {
        "result": "success"
      },
      "Int32ToDecimal": {
        "result": "success"
      },
      "ByteToInt32": {
        "result": "success"
      },
      "Int16ToInt32": {
        "result": "success"
      },
      "StringToInt32": {
        "result": "success"
      },
      "ObjectToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   1/1/0001 12:00:00 AM +00:00\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   1/1/0001 12:00:00 AM +00:00\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int32ToNullableInt32": {
        "result": "success"
      },
      "Int32ToNullableInt64": {
        "result": "success"
      },
      "NullableInt32ToNullableInt64": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Specified cast is not valid.\r\n       at ObjectsMapper49_FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1\\[\\[System.Nullable`1\\[\\[System.Int32\\, mscorlib\\, Version=4.0.0.0\\, Culture=neutral\\, PublicKeyToken=b77a5c561934e089\\]\\]\\, mscorlib\\, Version=4.0.0.0\\, Culture=neutral\\, PublicKeyToken=b77a5c561934e089\\]\\]_FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1\\[\\[System.Nullable`1\\[\\[System.Int64\\, mscorlib\\, Version=4.0.0.0\\, Culture=neutral\\, PublicKeyToken=b77a5c561934e089\\]\\]\\, mscorlib\\, Version=4.0.0.0\\, Culture=neutral\\, PublicKeyToken=b77a5c561934e089\\]\\][..].MapImpl(Object , Object , Object )\r\n       at EmitMapper.Mappers.ObjectsMapperBaseImpl.Map(Object from, Object to, Object state)\r\n       at EmitMapper.Mappers.ObjectsMapperBaseImpl.Map(Object from)\r\n       at EmitMapper.ObjectsMapper`2.Map(TFrom from)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.InvalidCastException: Specified cast is not valid.\r\n   at ObjectsMapper49_FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1\\[\\[System.Nullable`1\\[\\[System.Int32\\, mscorlib\\, Version=4.0.0.0\\, Culture=neutral\\, PublicKeyToken=b77a5c561934e089\\]\\]\\, mscorlib\\, Version=4.0.0.0\\, Culture=neutral\\, PublicKeyToken=b77a5c561934e089\\]\\]_FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1\\[\\[System.Nullable`1\\[\\[System.Int64\\, mscorlib\\, Version=4.0.0.0\\, Culture=neutral\\, PublicKeyToken=b77a5c561934e089\\]\\]\\, mscorlib\\, Version=4.0.0.0\\, Culture=neutral\\, PublicKeyToken=b77a5c561934e089\\]\\][..].MapImpl(Object , Object , Object )\r\n   at EmitMapper.Mappers.ObjectsMapperBaseImpl.Map(Object from, Object to, Object state)\r\n   at EmitMapper.Mappers.ObjectsMapperBaseImpl.Map(Object from)\r\n   at EmitMapper.ObjectsMapper`2.Map(TFrom from)\r\n   at lambda_method(Closure )\r\n"
      },
      "NullNullableInt32ToNullObject": {
        "result": "success"
      },
      "NullObjectToNullNullableInt32": {
        "result": "success"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   1/1/0001 12:00:00 AM +00:00\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   1/1/0001 12:00:00 AM +00:00\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   1/1/0001 12:00:00 AM +00:00\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   1/1/0001 12:00:00 AM +00:00\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToEnumSameItemName": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   -10\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   -10\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToEnumFlags": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: First, Second\r\n    Actual:   3\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: First, Second\r\nActual:   3\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumInt64ToEnumInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   10\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   10\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToNullableEnum": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   -10\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   -10\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "StringToEnum": {
        "result": "success"
      },
      "CollectionToEnumerable": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IEnumerable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IEnumerable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "EnumerableToCollection": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.ICollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.ICollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "CollectionToReadOnlyCollection": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IReadOnlyCollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IReadOnlyCollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.ICollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.ICollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IEnumerable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IEnumerable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ListToEnumerable": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IEnumerable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IEnumerable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "EnumerableToList": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ListToCollection": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.ICollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.ICollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "CollectionToList": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ListToReadOnlyCollection": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IReadOnlyCollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IReadOnlyCollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ReadOnlyCollectionToList": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ListToReadOnlyList": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IReadOnlyList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IReadOnlyList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ReadOnlyListToList": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "EnumerableToReadOnlyList": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IReadOnlyList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IReadOnlyList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "SetToEnumerable": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IEnumerable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IEnumerable`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "SetToCollection": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.ICollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.ICollection`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "SetToList": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.IList`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    System.Exception: Constructor for types [] not found in System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n       at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n       at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n       at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n       at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Exception: Constructor for types [] not found in System.Collections.Generic.ISet`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\r\n   at EmitMapper.AST.Nodes.AstNewObject.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstWriteLocal.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstIf.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.AST.Nodes.AstComplexNode.Compile(CompilationContext context)\r\n   at EmitMapper.EmitBuilders.MappingBuilder.BuildCopyImplMethod()\r\n   at EmitMapper.ObjectMapperManager.BuildObjectsMapper(String MapperTypeName, Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapperInt(Type from, Type to, IMappingConfigurator mappingConfigurator)\r\n   at EmitMapper.ObjectMapperManager.GetMapper[TFrom,TTo]()\r\n   at lambda_method(Closure )\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Simple": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedFlattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedUnflattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "MethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "GetMethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "success"
      }
    }
  },
  {
    "name": "fFastMapper",
    "version": "0.5.3",
    "supports": [
      "net40",
      "net45",
      "win80",
      "wp80",
      "sl40",
      "sl50"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "Int32ToString": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.String' cannot be used for assignment to type 'System.Int32'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.String' cannot be used for assignment to type 'System.Int32'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "Int32ToInt64": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Int64' cannot be used for assignment to type 'System.Int32'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Int64' cannot be used for assignment to type 'System.Int32'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "Int32ToDecimal": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Decimal' cannot be used for assignment to type 'System.Int32'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Decimal' cannot be used for assignment to type 'System.Int32'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "ByteToInt32": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Int32' cannot be used for assignment to type 'System.Byte'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Int32' cannot be used for assignment to type 'System.Byte'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "Int16ToInt32": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Int32' cannot be used for assignment to type 'System.Int16'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Int32' cannot be used for assignment to type 'System.Int16'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "StringToInt32": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.String' cannot be used for assignment to type 'System.Int32'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.String' cannot be used for assignment to type 'System.Int32'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "ObjectToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.DateTimeOffset' cannot be used for assignment to type 'System.DateTime'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.DateTimeOffset' cannot be used for assignment to type 'System.DateTime'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "Int32ToNullableInt32": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.Int32]' cannot be used for assignment to type 'System.Int32'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.Int32]' cannot be used for assignment to type 'System.Int32'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "Int32ToNullableInt64": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.Int64]' cannot be used for assignment to type 'System.Int32'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.Int64]' cannot be used for assignment to type 'System.Int32'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "NullableInt32ToNullableInt64": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.Int64]' cannot be used for assignment to type 'System.Nullable`1[System.Int32]'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.Int64]' cannot be used for assignment to type 'System.Nullable`1[System.Int32]'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "NullNullableInt32ToNullObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: (null)\r\n    Actual:   not set\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: (null)\r\nActual:   not set\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "NullObjectToNullNullableInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: (null)\r\n    Actual:   1\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: (null)\r\nActual:   1\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.DateTimeOffset]' cannot be used for assignment to type 'System.DateTime'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.DateTimeOffset]' cannot be used for assignment to type 'System.DateTime'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.DateTimeOffset]' cannot be used for assignment to type 'System.Nullable`1[System.DateTime]'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[System.DateTimeOffset]' cannot be used for assignment to type 'System.Nullable`1[System.DateTime]'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "EnumToEnumSameItemName": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'FeatureTests.On.ObjectMappers.TestTypes.Enum2' cannot be used for assignment to type 'FeatureTests.On.ObjectMappers.TestTypes.Enum1'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'FeatureTests.On.ObjectMappers.TestTypes.Enum2' cannot be used for assignment to type 'FeatureTests.On.ObjectMappers.TestTypes.Enum1'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "EnumToEnumFlags": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'FeatureTests.On.ObjectMappers.TestTypes.FlagsEnum2' cannot be used for assignment to type 'FeatureTests.On.ObjectMappers.TestTypes.FlagsEnum1'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'FeatureTests.On.ObjectMappers.TestTypes.FlagsEnum2' cannot be used for assignment to type 'FeatureTests.On.ObjectMappers.TestTypes.FlagsEnum1'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "EnumInt64ToEnumInt32": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'FeatureTests.On.ObjectMappers.TestTypes.Enum2' cannot be used for assignment to type 'FeatureTests.On.ObjectMappers.TestTypes.EnumBasedOnLong'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'FeatureTests.On.ObjectMappers.TestTypes.Enum2' cannot be used for assignment to type 'FeatureTests.On.ObjectMappers.TestTypes.EnumBasedOnLong'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "EnumToNullableEnum": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[FeatureTests.On.ObjectMappers.TestTypes.Enum2]' cannot be used for assignment to type 'FeatureTests.On.ObjectMappers.TestTypes.Enum1'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'System.Nullable`1[FeatureTests.On.ObjectMappers.TestTypes.Enum2]' cannot be used for assignment to type 'FeatureTests.On.ObjectMappers.TestTypes.Enum1'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "StringToEnum": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'FeatureTests.On.ObjectMappers.TestTypes.Enum2' cannot be used for assignment to type 'System.String'\r\n       at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n       at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Grax.fFastMapper.fFastMapperInternal`2' threw an exception. ---> System.ArgumentException: Expression of type 'FeatureTests.On.ObjectMappers.TestTypes.Enum2' cannot be used for assignment to type 'System.String'\r\n   at System.Linq.Expressions.Expression.Assign(Expression left, Expression right)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.CompileMapper()\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2.AddDefaultMappings(Boolean callReverse, Boolean quitSilentlyIfMappingStarted)\r\n   at Grax.fFastMapper.fFastMapperInternal`2..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Grax.fFastMapper.fFastMapperInternal`2.get_fFastMapFluent()\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "CollectionToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToReadOnlyCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToReadOnlyCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToReadOnlyList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyListToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToReadOnlyList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    System.Security.VerificationException: Operation could destabilize the runtime.\r\n       at lambda_method(Closure , Wrapper`1 , WrapperWithReadOnly`2 )\r\n       at Grax.fFastMapper.fFastMapperFluent`2.Map(TLeft source, TRight destination)\r\n       at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.Security.VerificationException: Operation could destabilize the runtime.\r\n   at lambda_method(Closure , Wrapper`1 , WrapperWithReadOnly`2 )\r\n   at Grax.fFastMapper.fFastMapperFluent`2.Map(TLeft source, TRight destination)\r\n   at Grax.fFastMapper.fFastMap.Map[TFrom,TTo](TFrom from, TTo to)\r\n   at lambda_method(Closure )\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Simple": {
        "result": "failure",
        "comment": "    System.MissingMethodException: No parameterless constructor defined for this object.\r\n       at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)\r\n       at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n       at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n       at System.Activator.CreateInstance[T]()\r\n    ",
        "error": "System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)\r\n   at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n   at System.Activator.CreateInstance[T]()\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.MissingMethodException: No parameterless constructor defined for this object.\r\n       at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)\r\n       at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n       at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n       at System.Activator.CreateInstance[T]()\r\n    ",
        "error": "System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)\r\n   at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n   at System.Activator.CreateInstance[T]()\r\n"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedFlattening": {
        "result": "success"
      },
      "NameBasedUnflattening": {
        "result": "success"
      },
      "MethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "GetMethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "failure",
        "comment": "    Xunit.Sdk.TrueException: Assert.True() Failure\r\n    ",
        "error": "Xunit.Sdk.TrueException: Assert.True() Failure\r\n"
      }
    }
  },
  {
    "name": "Fpr",
    "url": "https://github.com/eswann/Mapster",
    "version": "1.11.0.0",
    "supports": [
      "net45"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "success"
      },
      "Int32ToString": {
        "result": "success"
      },
      "Int32ToInt64": {
        "result": "success"
      },
      "Int32ToDecimal": {
        "result": "success"
      },
      "ByteToInt32": {
        "result": "success"
      },
      "Int16ToInt32": {
        "result": "success"
      },
      "StringToInt32": {
        "result": "success"
      },
      "ObjectToInt32": {
        "result": "success"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Error occurred mapping the following property.\n    Source Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.DateTime]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.DateTimeOffset]  Destination Property: Value\n    Exception: System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory) in c:\\Projects\\Fpr\\src\\Fpr\\Utils\\FastObjectFactory.cs:line 27\r\n       at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory() in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 37\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 74\r\n       at (Object , Object[] )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 168 ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n       at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at (Object , Object[] )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       --- End of inner exception stack trace ---\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.InvalidOperationException: Error occurred mapping the following property.\nSource Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.DateTime]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.DateTimeOffset]  Destination Property: Value\nException: System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory) in c:\\Projects\\Fpr\\src\\Fpr\\Utils\\FastObjectFactory.cs:line 27\r\n   at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory() in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 37\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 74\r\n   at (Object , Object[] )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 168 ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n   at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at (Object , Object[] )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   --- End of inner exception stack trace ---\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "Int32ToNullableInt32": {
        "result": "success"
      },
      "Int32ToNullableInt64": {
        "result": "success"
      },
      "NullableInt32ToNullableInt64": {
        "result": "success"
      },
      "NullNullableInt32ToNullObject": {
        "result": "success"
      },
      "NullObjectToNullNullableInt32": {
        "result": "success"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Error occurred mapping the following property.\n    Source Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.DateTime]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Nullable`1[System.DateTimeOffset]]  Destination Property: Value\n    Exception: System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory) in c:\\Projects\\Fpr\\src\\Fpr\\Utils\\FastObjectFactory.cs:line 27\r\n       at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory() in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 37\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 74\r\n       at (Object , Object[] )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 168 ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n       at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at (Object , Object[] )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       --- End of inner exception stack trace ---\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.InvalidOperationException: Error occurred mapping the following property.\nSource Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.DateTime]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Nullable`1[System.DateTimeOffset]]  Destination Property: Value\nException: System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory) in c:\\Projects\\Fpr\\src\\Fpr\\Utils\\FastObjectFactory.cs:line 27\r\n   at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory() in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 37\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 74\r\n   at (Object , Object[] )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 168 ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n   at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at (Object , Object[] )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   --- End of inner exception stack trace ---\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Error occurred mapping the following property.\n    Source Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Nullable`1[System.DateTime]]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Nullable`1[System.DateTimeOffset]]  Destination Property: Value\n    Exception: System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory) in c:\\Projects\\Fpr\\src\\Fpr\\Utils\\FastObjectFactory.cs:line 27\r\n       at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory() in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 37\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 74\r\n       at (Object , Object[] )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 168 ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n       at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at (Object , Object[] )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       --- End of inner exception stack trace ---\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.InvalidOperationException: Error occurred mapping the following property.\nSource Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Nullable`1[System.DateTime]]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Nullable`1[System.DateTimeOffset]]  Destination Property: Value\nException: System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory) in c:\\Projects\\Fpr\\src\\Fpr\\Utils\\FastObjectFactory.cs:line 27\r\n   at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory() in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 37\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 74\r\n   at (Object , Object[] )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 168 ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n   at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at (Object , Object[] )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   --- End of inner exception stack trace ---\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "EnumToEnumSameItemName": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   -10\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   -10\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToEnumFlags": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: First, Second\r\n    Actual:   3\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: First, Second\r\nActual:   3\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumInt64ToEnumInt32": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Error occurred mapping the following property.\n    Source Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[FeatureTests.On.ObjectMappers.TestTypes.EnumBasedOnLong]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[FeatureTests.On.ObjectMappers.TestTypes.Enum2]  Destination Property: Value\n    Exception: System.InvalidCastException: Specified cast is not valid.\r\n       at _SetValue_(Wrapper`1 , Object )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Specified cast is not valid.\r\n       --- End of inner exception stack trace ---\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.InvalidOperationException: Error occurred mapping the following property.\nSource Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[FeatureTests.On.ObjectMappers.TestTypes.EnumBasedOnLong]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[FeatureTests.On.ObjectMappers.TestTypes.Enum2]  Destination Property: Value\nException: System.InvalidCastException: Specified cast is not valid.\r\n   at _SetValue_(Wrapper`1 , Object )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Specified cast is not valid.\r\n   --- End of inner exception stack trace ---\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "EnumToNullableEnum": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Error occurred mapping the following property.\n    Source Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[FeatureTests.On.ObjectMappers.TestTypes.Enum1]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Nullable`1[FeatureTests.On.ObjectMappers.TestTypes.Enum2]]  Destination Property: Value\n    Exception: System.InvalidCastException: Specified cast is not valid.\r\n       at _SetValue_(Wrapper`1 , Object )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Specified cast is not valid.\r\n       --- End of inner exception stack trace ---\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.InvalidOperationException: Error occurred mapping the following property.\nSource Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[FeatureTests.On.ObjectMappers.TestTypes.Enum1]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Nullable`1[FeatureTests.On.ObjectMappers.TestTypes.Enum2]]  Destination Property: Value\nException: System.InvalidCastException: Specified cast is not valid.\r\n   at _SetValue_(Wrapper`1 , Object )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Specified cast is not valid.\r\n   --- End of inner exception stack trace ---\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "StringToEnum": {
        "result": "success"
      },
      "CollectionToEnumerable": {
        "result": "success"
      },
      "EnumerableToCollection": {
        "result": "success"
      },
      "CollectionToReadOnlyCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "success"
      },
      "ListToEnumerable": {
        "result": "success"
      },
      "EnumerableToList": {
        "result": "success"
      },
      "ListToCollection": {
        "result": "success"
      },
      "CollectionToList": {
        "result": "success"
      },
      "ListToReadOnlyCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToList": {
        "result": "success"
      },
      "ListToReadOnlyList": {
        "result": "success"
      },
      "ReadOnlyListToList": {
        "result": "success"
      },
      "EnumerableToReadOnlyList": {
        "result": "success"
      },
      "SetToEnumerable": {
        "result": "success"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Error occurred mapping the following property.\n    Source Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.IEnumerable`1[System.Int32]]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.ISet`1[System.Int32]]  Destination Property: Value\n    Exception: System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at _SetValue_(Wrapper`1 , Object )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       --- End of inner exception stack trace ---\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.InvalidOperationException: Error occurred mapping the following property.\nSource Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.IEnumerable`1[System.Int32]]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.ISet`1[System.Int32]]  Destination Property: Value\nException: System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at _SetValue_(Wrapper`1 , Object )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   --- End of inner exception stack trace ---\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "SetToCollection": {
        "result": "success"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Error occurred mapping the following property.\n    Source Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.ICollection`1[System.Int32]]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.ISet`1[System.Int32]]  Destination Property: Value\n    Exception: System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at _SetValue_(Wrapper`1 , Object )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       --- End of inner exception stack trace ---\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.InvalidOperationException: Error occurred mapping the following property.\nSource Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.ICollection`1[System.Int32]]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.ISet`1[System.Int32]]  Destination Property: Value\nException: System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at _SetValue_(Wrapper`1 , Object )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   --- End of inner exception stack trace ---\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "SetToList": {
        "result": "success"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Error occurred mapping the following property.\n    Source Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.IList`1[System.Int32]]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.ISet`1[System.Int32]]  Destination Property: Value\n    Exception: System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at _SetValue_(Wrapper`1 , Object )\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       --- End of inner exception stack trace ---\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.InvalidOperationException: Error occurred mapping the following property.\nSource Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.IList`1[System.Int32]]  Destination Type: FeatureTests.On.ObjectMappers.TestTypes.Wrapper`1[System.Collections.Generic.ISet`1[System.Int32]]  Destination Property: Value\nException: System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at _SetValue_(Wrapper`1 , Object )\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes) in c:\\Projects\\Fpr\\src\\Fpr\\Adapters\\ClassAdapter.cs:line 192 ---> System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   --- End of inner exception stack trace ---\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source, TDestination destination, Boolean isNew, Boolean evaluateMaxDepth, Dictionary`2 parameterIndexes)\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Simple": {
        "result": "failure",
        "comment": "    System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n       at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n   at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n       at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n       at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n       at (Object , Object[] )\r\n       at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n    ",
        "error": "System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at Fpr.Utils.FastObjectFactory.CreateObjectFactory[T](Func`1 factory)\r\n   at Fpr.Adapters.ClassAdapter`2.get_DestinationFactory()\r\n   at Fpr.Adapters.ClassAdapter`2.Adapt(TSource source)\r\n   at (Object , Object[] )\r\n   at Fpr.TypeAdapter.Adapt[TDestination](Object source)\r\n"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedFlattening": {
        "result": "success"
      },
      "NameBasedUnflattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "MethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "GetMethodToProperty": {
        "result": "success"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "failure",
        "comment": "    Xunit.Sdk.TrueException: Assert.True() Failure\r\n    ",
        "error": "Xunit.Sdk.TrueException: Assert.True() Failure\r\n"
      }
    }
  },
  {
    "name": "Meow.Cartograph",
    "url": "https://github.com/jaredmcguire/Meow.Cartograph",
    "version": "1.1.0.32239",
    "supports": [
      "net40",
      "net45"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "success"
      },
      "Int32ToString": {
        "result": "success"
      },
      "Int32ToInt64": {
        "result": "success"
      },
      "Int32ToDecimal": {
        "result": "success"
      },
      "ByteToInt32": {
        "result": "success"
      },
      "Int16ToInt32": {
        "result": "success"
      },
      "StringToInt32": {
        "result": "success"
      },
      "ObjectToInt32": {
        "result": "success"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   1/1/0001 12:00:00 AM +00:00\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   1/1/0001 12:00:00 AM +00:00\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int32ToNullableInt32": {
        "result": "success"
      },
      "Int32ToNullableInt64": {
        "result": "success"
      },
      "NullableInt32ToNullableInt64": {
        "result": "success"
      },
      "NullNullableInt32ToNullObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: (null)\r\n    Actual:   not set\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: (null)\r\nActual:   not set\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "NullObjectToNullNullableInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: (null)\r\n    Actual:   1\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: (null)\r\nActual:   1\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToEnumSameItemName": {
        "result": "success"
      },
      "EnumToEnumFlags": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: First, Second\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: First, Second\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumInt64ToEnumInt32": {
        "result": "success"
      },
      "EnumToNullableEnum": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "StringToEnum": {
        "result": "success"
      },
      "CollectionToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToReadOnlyCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToReadOnlyCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToReadOnlyList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyListToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToReadOnlyList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Simple": {
        "result": "failure",
        "comment": "    System.ArgumentException: Property set method not found.\r\n       at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\n       at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, Object[] index)\r\n       at Meow.Cartograph.Mapper.SetValue(Object obj, Object value, MemberInfo member)\r\n       at Meow.Cartograph.Mapper.MapAs[T](Object inObject)\r\n    ",
        "error": "System.ArgumentException: Property set method not found.\r\n   at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)\r\n   at System.Reflection.RuntimePropertyInfo.SetValue(Object obj, Object value, Object[] index)\r\n   at Meow.Cartograph.Mapper.SetValue(Object obj, Object value, MemberInfo member)\r\n   at Meow.Cartograph.Mapper.MapAs[T](Object inObject)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedFlattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedUnflattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "MethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "GetMethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "failure",
        "comment": "    Xunit.Sdk.TrueException: Assert.True() Failure\r\n    ",
        "error": "Xunit.Sdk.TrueException: Assert.True() Failure\r\n"
      }
    }
  },
  {
    "name": "OoMapper",
    "url": "http://github.com/hazzik/OoMapper",
    "version": "0.2.0.33",
    "supports": [
      "net40",
      "net45",
      "sl40",
      "sl50"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "success"
      },
      "Int32ToString": {
        "result": "success"
      },
      "Int32ToInt64": {
        "result": "success"
      },
      "Int32ToDecimal": {
        "result": "success"
      },
      "ByteToInt32": {
        "result": "success"
      },
      "Int16ToInt32": {
        "result": "success"
      },
      "StringToInt32": {
        "result": "failure",
        "comment": "    System.Collections.Generic.KeyNotFoundException: (System.String, System.Int32)\r\n       at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n       at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.CompositeSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.PropertyMap.BuildBind(Expression source, IMappingConfiguration configuration)\r\n       at OoMapper.NewObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(PropertyMap m)\r\n       at System.Linq.Enumerable.WhereSelectListIterator`2.MoveNext()\r\n       at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n       at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n       at OoMapper.NewObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n       at OoMapper.CachedObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(Tuple`2 k)\r\n       at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n       at OoMapper.CachedObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n       at OoMapper.UserConfigurationMapper.BuildSource(Expression expression, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.MappingConfiguration.<>c__DisplayClass3.<BuildSource>b__0(ISourceMemberResolver r)\r\n       at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n       at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n       at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n       at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.MappingConfiguration.BuildNew(Type sourceType, Type destinationType)\r\n       at OoMapper.MappingConfiguration.<>c__DisplayClass9.<GetCompiledNew>b__8(Tuple`2 key)\r\n       at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n       at OoMapper.MappingConfiguration.GetCompiledNew(Type sourceType, Type destinationType)\r\n       at OoMapper.Mapper.Map(Object source, Type sourceType, Type destinationType)\r\n    ",
        "error": "System.Collections.Generic.KeyNotFoundException: (System.String, System.Int32)\r\n   at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n   at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.CompositeSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.PropertyMap.BuildBind(Expression source, IMappingConfiguration configuration)\r\n   at OoMapper.NewObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(PropertyMap m)\r\n   at System.Linq.Enumerable.WhereSelectListIterator`2.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at OoMapper.NewObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n   at OoMapper.CachedObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(Tuple`2 k)\r\n   at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n   at OoMapper.CachedObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n   at OoMapper.UserConfigurationMapper.BuildSource(Expression expression, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.MappingConfiguration.<>c__DisplayClass3.<BuildSource>b__0(ISourceMemberResolver r)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n   at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.MappingConfiguration.BuildNew(Type sourceType, Type destinationType)\r\n   at OoMapper.MappingConfiguration.<>c__DisplayClass9.<GetCompiledNew>b__8(Tuple`2 key)\r\n   at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n   at OoMapper.MappingConfiguration.GetCompiledNew(Type sourceType, Type destinationType)\r\n   at OoMapper.Mapper.Map(Object source, Type sourceType, Type destinationType)\r\n"
      },
      "ObjectToInt32": {
        "result": "success"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "success"
      },
      "Int32ToNullableInt32": {
        "result": "success"
      },
      "Int32ToNullableInt64": {
        "result": "success"
      },
      "NullableInt32ToNullableInt64": {
        "result": "success"
      },
      "NullNullableInt32ToNullObject": {
        "result": "success"
      },
      "NullObjectToNullNullableInt32": {
        "result": "success"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "success"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "success"
      },
      "EnumToEnumSameItemName": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   -10\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   -10\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToEnumFlags": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: First, Second\r\n    Actual:   3\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: First, Second\r\nActual:   3\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumInt64ToEnumInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   10\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   10\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToNullableEnum": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   -10\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   -10\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "StringToEnum": {
        "result": "failure",
        "comment": "    System.Collections.Generic.KeyNotFoundException: (System.String, FeatureTests.On.ObjectMappers.TestTypes.Enum2)\r\n       at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n       at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.CompositeSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.PropertyMap.BuildBind(Expression source, IMappingConfiguration configuration)\r\n       at OoMapper.NewObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(PropertyMap m)\r\n       at System.Linq.Enumerable.WhereSelectListIterator`2.MoveNext()\r\n       at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n       at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n       at OoMapper.NewObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n       at OoMapper.CachedObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(Tuple`2 k)\r\n       at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n       at OoMapper.CachedObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n       at OoMapper.UserConfigurationMapper.BuildSource(Expression expression, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.MappingConfiguration.<>c__DisplayClass3.<BuildSource>b__0(ISourceMemberResolver r)\r\n       at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n       at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n       at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n       at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.MappingConfiguration.BuildNew(Type sourceType, Type destinationType)\r\n       at OoMapper.MappingConfiguration.<>c__DisplayClass9.<GetCompiledNew>b__8(Tuple`2 key)\r\n       at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n       at OoMapper.MappingConfiguration.GetCompiledNew(Type sourceType, Type destinationType)\r\n       at OoMapper.Mapper.Map(Object source, Type sourceType, Type destinationType)\r\n    ",
        "error": "System.Collections.Generic.KeyNotFoundException: (System.String, FeatureTests.On.ObjectMappers.TestTypes.Enum2)\r\n   at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n   at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.CompositeSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.PropertyMap.BuildBind(Expression source, IMappingConfiguration configuration)\r\n   at OoMapper.NewObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(PropertyMap m)\r\n   at System.Linq.Enumerable.WhereSelectListIterator`2.MoveNext()\r\n   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at OoMapper.NewObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n   at OoMapper.CachedObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(Tuple`2 k)\r\n   at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n   at OoMapper.CachedObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n   at OoMapper.UserConfigurationMapper.BuildSource(Expression expression, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.MappingConfiguration.<>c__DisplayClass3.<BuildSource>b__0(ISourceMemberResolver r)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n   at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.MappingConfiguration.BuildNew(Type sourceType, Type destinationType)\r\n   at OoMapper.MappingConfiguration.<>c__DisplayClass9.<GetCompiledNew>b__8(Tuple`2 key)\r\n   at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n   at OoMapper.MappingConfiguration.GetCompiledNew(Type sourceType, Type destinationType)\r\n   at OoMapper.Mapper.Map(Object source, Type sourceType, Type destinationType)\r\n"
      },
      "CollectionToEnumerable": {
        "result": "success"
      },
      "EnumerableToCollection": {
        "result": "success"
      },
      "CollectionToReadOnlyCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "success"
      },
      "ListToEnumerable": {
        "result": "success"
      },
      "EnumerableToList": {
        "result": "success"
      },
      "ListToCollection": {
        "result": "success"
      },
      "CollectionToList": {
        "result": "success"
      },
      "ListToReadOnlyCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToList": {
        "result": "success"
      },
      "ListToReadOnlyList": {
        "result": "success"
      },
      "ReadOnlyListToList": {
        "result": "success"
      },
      "EnumerableToReadOnlyList": {
        "result": "success"
      },
      "SetToEnumerable": {
        "result": "success"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at lambda_method(Closure , Wrapper`1 )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at lambda_method(Closure , Wrapper`1 )\r\n"
      },
      "SetToCollection": {
        "result": "success"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at lambda_method(Closure , Wrapper`1 )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at lambda_method(Closure , Wrapper`1 )\r\n"
      },
      "SetToList": {
        "result": "success"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at lambda_method(Closure , Wrapper`1 )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at lambda_method(Closure , Wrapper`1 )\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Simple": {
        "result": "failure",
        "comment": "    System.ArgumentException: Type 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]' does not have a default constructor\r\n       at System.Linq.Expressions.Expression.New(Type type)\r\n       at OoMapper.NewObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n       at OoMapper.CachedObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(Tuple`2 k)\r\n       at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n       at OoMapper.CachedObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n       at OoMapper.UserConfigurationMapper.BuildSource(Expression expression, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.MappingConfiguration.<>c__DisplayClass3.<BuildSource>b__0(ISourceMemberResolver r)\r\n       at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n       at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n       at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n       at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.MappingConfiguration.BuildNew(Type sourceType, Type destinationType)\r\n       at OoMapper.MappingConfiguration.<>c__DisplayClass9.<GetCompiledNew>b__8(Tuple`2 key)\r\n       at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n       at OoMapper.MappingConfiguration.GetCompiledNew(Type sourceType, Type destinationType)\r\n       at OoMapper.Mapper.Map(Object source, Type sourceType, Type destinationType)\r\n    ",
        "error": "System.ArgumentException: Type 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]' does not have a default constructor\r\n   at System.Linq.Expressions.Expression.New(Type type)\r\n   at OoMapper.NewObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n   at OoMapper.CachedObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(Tuple`2 k)\r\n   at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n   at OoMapper.CachedObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n   at OoMapper.UserConfigurationMapper.BuildSource(Expression expression, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.MappingConfiguration.<>c__DisplayClass3.<BuildSource>b__0(ISourceMemberResolver r)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n   at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.MappingConfiguration.BuildNew(Type sourceType, Type destinationType)\r\n   at OoMapper.MappingConfiguration.<>c__DisplayClass9.<GetCompiledNew>b__8(Tuple`2 key)\r\n   at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n   at OoMapper.MappingConfiguration.GetCompiledNew(Type sourceType, Type destinationType)\r\n   at OoMapper.Mapper.Map(Object source, Type sourceType, Type destinationType)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.ArgumentException: Type 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]' does not have a default constructor\r\n       at System.Linq.Expressions.Expression.New(Type type)\r\n       at OoMapper.NewObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n       at OoMapper.CachedObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(Tuple`2 k)\r\n       at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n       at OoMapper.CachedObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n       at OoMapper.UserConfigurationMapper.BuildSource(Expression expression, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.MappingConfiguration.<>c__DisplayClass3.<BuildSource>b__0(ISourceMemberResolver r)\r\n       at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n       at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n       at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n       at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n       at OoMapper.MappingConfiguration.BuildNew(Type sourceType, Type destinationType)\r\n       at OoMapper.MappingConfiguration.<>c__DisplayClass9.<GetCompiledNew>b__8(Tuple`2 key)\r\n       at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n       at OoMapper.MappingConfiguration.GetCompiledNew(Type sourceType, Type destinationType)\r\n       at OoMapper.Mapper.Map(Object source, Type sourceType, Type destinationType)\r\n    ",
        "error": "System.ArgumentException: Type 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]' does not have a default constructor\r\n   at System.Linq.Expressions.Expression.New(Type type)\r\n   at OoMapper.NewObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n   at OoMapper.CachedObjectMapperBuilder.<>c__DisplayClass1.<Build>b__0(Tuple`2 k)\r\n   at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n   at OoMapper.CachedObjectMapperBuilder.Build(TypeMap typeMap, IMappingConfiguration configuration)\r\n   at OoMapper.UserConfigurationMapper.BuildSource(Expression expression, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.MappingConfiguration.<>c__DisplayClass3.<BuildSource>b__0(ISourceMemberResolver r)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\r\n   at OoMapper.MappingConfiguration.BuildSource(Expression expression, Type destinationType, IMappingConfiguration cfg)\r\n   at OoMapper.ConvertSourceMemberResolver.BuildSource(Expression x, Type destinationType, IMappingConfiguration mappingConfiguration)\r\n   at OoMapper.MappingConfiguration.BuildNew(Type sourceType, Type destinationType)\r\n   at OoMapper.MappingConfiguration.<>c__DisplayClass9.<GetCompiledNew>b__8(Tuple`2 key)\r\n   at OoMapper.Cache`2.GetOrAdd(TKey key, Func`2 func)\r\n   at OoMapper.MappingConfiguration.GetCompiledNew(Type sourceType, Type destinationType)\r\n   at OoMapper.Mapper.Map(Object source, Type sourceType, Type destinationType)\r\n"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedFlattening": {
        "result": "success"
      },
      "NameBasedUnflattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "MethodToProperty": {
        "result": "success"
      },
      "GetMethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "failure",
        "comment": "    Xunit.Sdk.TrueException: Assert.True() Failure\r\n    ",
        "error": "Xunit.Sdk.TrueException: Assert.True() Failure\r\n"
      }
    }
  },
  {
    "name": "ThisMember",
    "url": "https://github.com/JulianR/ThisMember/wiki",
    "version": "1.4.6",
    "supports": [
      "net35",
      "net40",
      "net45",
      "win80",
      "wp80",
      "wpa81",
      "sl30",
      "sl40",
      "sl50",
      "MonoAndroid",
      "MonoTouch"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "success"
      },
      "Int32ToString": {
        "result": "success"
      },
      "Int32ToInt64": {
        "result": "success"
      },
      "Int32ToDecimal": {
        "result": "success"
      },
      "ByteToInt32": {
        "result": "success"
      },
      "Int16ToInt32": {
        "result": "success"
      },
      "StringToInt32": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Int32 and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Int32 and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "ObjectToInt32": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Int32 and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Int32 and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.DateTimeOffset and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.DateTimeOffset and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "Int32ToNullableInt32": {
        "result": "success"
      },
      "Int32ToNullableInt64": {
        "result": "success"
      },
      "NullableInt32ToNullableInt64": {
        "result": "success"
      },
      "NullNullableInt32ToNullObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: (null)\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: (null)\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "NullObjectToNullNullableInt32": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Nullable`1[System.Int32] and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Nullable`1[System.Int32] and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Nullable`1[System.DateTimeOffset] and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Nullable`1[System.DateTimeOffset] and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Nullable`1[System.DateTimeOffset] and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Nullable`1[System.DateTimeOffset] and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "EnumToEnumSameItemName": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type FeatureTests.On.ObjectMappers.TestTypes.Enum2 and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type FeatureTests.On.ObjectMappers.TestTypes.Enum2 and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "EnumToEnumFlags": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type FeatureTests.On.ObjectMappers.TestTypes.FlagsEnum2 and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type FeatureTests.On.ObjectMappers.TestTypes.FlagsEnum2 and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "EnumInt64ToEnumInt32": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type FeatureTests.On.ObjectMappers.TestTypes.Enum2 and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type FeatureTests.On.ObjectMappers.TestTypes.Enum2 and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "EnumToNullableEnum": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Nullable`1[FeatureTests.On.ObjectMappers.TestTypes.Enum2] and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type System.Nullable`1[FeatureTests.On.ObjectMappers.TestTypes.Enum2] and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "StringToEnum": {
        "result": "failure",
        "comment": "    ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type FeatureTests.On.ObjectMappers.TestTypes.Enum2 and no custom constructor provided either.\r\n       at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "ThisMember.Core.Exceptions.CodeGenerationException: No parameterless constructor defined for type FeatureTests.On.ObjectMappers.TestTypes.Enum2 and no custom constructor provided either.\r\n   at ThisMember.Core.CompiledMapGenerator.GetConstructorForType(Type t, ParameterExpression source, ParameterExpression destination)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "CollectionToEnumerable": {
        "result": "success"
      },
      "EnumerableToCollection": {
        "result": "success"
      },
      "CollectionToReadOnlyCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "success"
      },
      "ListToEnumerable": {
        "result": "success"
      },
      "EnumerableToList": {
        "result": "success"
      },
      "ListToCollection": {
        "result": "success"
      },
      "CollectionToList": {
        "result": "success"
      },
      "ListToReadOnlyCollection": {
        "result": "success"
      },
      "ReadOnlyCollectionToList": {
        "result": "success"
      },
      "ListToReadOnlyList": {
        "result": "success"
      },
      "ReadOnlyListToList": {
        "result": "success"
      },
      "EnumerableToReadOnlyList": {
        "result": "success"
      },
      "SetToEnumerable": {
        "result": "success"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at lambda_method(Closure , Wrapper`1 , Wrapper`1 )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at lambda_method(Closure , Wrapper`1 , Wrapper`1 )\r\n"
      },
      "SetToCollection": {
        "result": "success"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at lambda_method(Closure , Wrapper`1 , Wrapper`1 )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at lambda_method(Closure , Wrapper`1 , Wrapper`1 )\r\n"
      },
      "SetToList": {
        "result": "success"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n       at lambda_method(Closure , Wrapper`1 , Wrapper`1 )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.List`1[System.Int32]' to type 'System.Collections.Generic.ISet`1[System.Int32]'.\r\n   at lambda_method(Closure , Wrapper`1 , Wrapper`1 )\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Simple": {
        "result": "failure",
        "comment": "    System.ArgumentException: GenericArguments[0], 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]', on 'TDestination Map[TDestination](System.Object)' violates the constraint of type 'TDestination'. ---> System.Security.VerificationException: Method ThisMember.Core.MemberMapper.Map: type argument 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]' violates the constraint of type parameter 'TDestination'.\r\n       at System.RuntimeMethodHandle.GetStubIfNeeded(RuntimeMethodHandleInternal method, RuntimeType declaringType, RuntimeType[] methodInstantiation)\r\n       at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n       --- End of inner exception stack trace ---\r\n       at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n       at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n    ",
        "error": "System.ArgumentException: GenericArguments[0], 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]', on 'TDestination Map[TDestination](System.Object)' violates the constraint of type 'TDestination'. ---> System.Security.VerificationException: Method ThisMember.Core.MemberMapper.Map: type argument 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]' violates the constraint of type parameter 'TDestination'.\r\n   at System.RuntimeMethodHandle.GetStubIfNeeded(RuntimeMethodHandleInternal method, RuntimeType declaringType, RuntimeType[] methodInstantiation)\r\n   at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n   at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.ArgumentException: GenericArguments[0], 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]', on 'TDestination Map[TDestination](System.Object)' violates the constraint of type 'TDestination'. ---> System.Security.VerificationException: Method ThisMember.Core.MemberMapper.Map: type argument 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]' violates the constraint of type parameter 'TDestination'.\r\n       at System.RuntimeMethodHandle.GetStubIfNeeded(RuntimeMethodHandleInternal method, RuntimeType declaringType, RuntimeType[] methodInstantiation)\r\n       at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n       --- End of inner exception stack trace ---\r\n       at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n       at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n    ",
        "error": "System.ArgumentException: GenericArguments[0], 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]', on 'TDestination Map[TDestination](System.Object)' violates the constraint of type 'TDestination'. ---> System.Security.VerificationException: Method ThisMember.Core.MemberMapper.Map: type argument 'FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[FeatureTests.On.ObjectMappers.TestTypes.ImmutableWrapper`1[System.String]]' violates the constraint of type parameter 'TDestination'.\r\n   at System.RuntimeMethodHandle.GetStubIfNeeded(RuntimeMethodHandleInternal method, RuntimeType declaringType, RuntimeType[] methodInstantiation)\r\n   at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeType.ValidateGenericArguments(MemberInfo definition, RuntimeType[] genericArguments, Exception e)\r\n   at System.Reflection.RuntimeMethodInfo.MakeGenericMethod(Type[] methodInstantiation)\r\n"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    System.ArgumentException: Property 'System.Object Value' is not defined for type 'System.Dynamic.ExpandoObject'\r\n       at System.Linq.Expressions.Expression.Property(Expression expression, PropertyInfo property)\r\n       at System.Linq.Expressions.Expression.MakeMemberAccess(Expression expression, MemberInfo member)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n       at ThisMember.Core.MemberMapper.Map[TDestination](Object source)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.ArgumentException: Property 'System.Object Value' is not defined for type 'System.Dynamic.ExpandoObject'\r\n   at System.Linq.Expressions.Expression.Property(Expression expression, PropertyInfo property)\r\n   at System.Linq.Expressions.Expression.MakeMemberAccess(Expression expression, MemberInfo member)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n   at ThisMember.Core.MemberMapper.Map[TDestination](Object source)\r\n   at lambda_method(Closure )\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    System.ArgumentException: Property 'System.Object Value' is not defined for type 'System.Collections.Generic.Dictionary`2[System.String,System.Object]'\r\n       at System.Linq.Expressions.Expression.Property(Expression expression, PropertyInfo property)\r\n       at System.Linq.Expressions.Expression.MakeMemberAccess(Expression expression, MemberInfo member)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n       at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n       at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n       at ThisMember.Core.ProposedMap.FinalizeMap()\r\n    ",
        "error": "System.ArgumentException: Property 'System.Object Value' is not defined for type 'System.Collections.Generic.Dictionary`2[System.String,System.Object]'\r\n   at System.Linq.Expressions.Expression.Property(Expression expression, PropertyInfo property)\r\n   at System.Linq.Expressions.Expression.MakeMemberAccess(Expression expression, MemberInfo member)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildComplexTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping complexTypeMapping, List`1 expressions)\r\n   at ThisMember.Core.CompiledMapGenerator.BuildTypeMappingExpressions(ParameterExpression source, ParameterExpression destination, ProposedTypeMapping typeMapping, List`1 expressions, CustomMapping customMapping)\r\n   at ThisMember.Core.CompiledMapGenerator.GenerateMappingFunction()\r\n   at ThisMember.Core.ProposedMap.FinalizeMap()\r\n"
      },
      "NameBasedFlattening": {
        "result": "success"
      },
      "NameBasedUnflattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "MethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "GetMethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "success"
      }
    }
  },
  {
    "name": "ValueInjecter",
    "url": "http://valueinjecter.codeplex.com",
    "version": "2.3.3",
    "supports": [
      "net35",
      "net40",
      "net45",
      "sl30",
      "sl40",
      "sl50"
    ],
    "features": {
      "StringToString": {
        "result": "success"
      },
      "Int32ToInt32": {
        "result": "success"
      },
      "Int32ToObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "Int32ToString": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "Int32ToInt64": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int32ToDecimal": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ByteToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int16ToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "StringToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ObjectToInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 123\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 123\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "DateTimeToDateTime": {
        "result": "success"
      },
      "DateTimeToDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   1/1/0001 12:00:00 AM +00:00\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   1/1/0001 12:00:00 AM +00:00\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int32ToNullableInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 5\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 5\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Int32ToNullableInt64": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 5\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 5\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NullableInt32ToNullableInt64": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 5\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 5\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NullNullableInt32ToNullObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: (null)\r\n    Actual:   not set\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: (null)\r\nActual:   not set\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "NullObjectToNullNullableInt32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: (null)\r\n    Actual:   1\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: (null)\r\nActual:   1\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "DateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NullableDateTimeToNullableDateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 11/22/2014 1:45:07 PM +03:00\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 11/22/2014 1:45:07 PM +03:00\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumToEnumSameItemName": {
        "result": "success"
      },
      "EnumToEnumFlags": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: First, Second\r\n    Actual:   0\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: First, Second\r\nActual:   0\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "EnumInt64ToEnumInt32": {
        "result": "success"
      },
      "EnumToNullableEnum": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: Default\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: Default\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "StringToEnum": {
        "result": "success"
      },
      "CollectionToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToReadOnlyCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToReadOnlyCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyCollectionToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToReadOnlyList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ReadOnlyListToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToReadOnlyList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToEnumerable": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "EnumerableToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToCollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "CollectionToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "SetToList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "ListToSet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n    ",
        "error": "Xunit.Sdk.NotNullException: Assert.NotNull() Failure\r\n"
      },
      "IListToIList": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ICollectionToICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetToISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Int32[] { 5 }\r\n    Actual:   Int32[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Int32[] { 5 }\r\nActual:   Int32[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Simple": {
        "result": "failure",
        "comment": "    System.MissingMethodException: No parameterless constructor defined for this object.\r\n       at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)\r\n       at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n       at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n       at System.Activator.CreateInstance[T]()\r\n    ",
        "error": "System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)\r\n   at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n   at System.Activator.CreateInstance[T]()\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.MissingMethodException: No parameterless constructor defined for this object.\r\n       at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)\r\n       at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n       at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n       at System.Activator.CreateInstance[T]()\r\n    ",
        "error": "System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.RuntimeTypeHandle.CreateInstance(RuntimeType type, Boolean publicOnly, Boolean noCheck, Boolean& canBeCached, RuntimeMethodHandleInternal& ctor, Boolean& bNeedSecurityCheck)\r\n   at System.RuntimeType.CreateInstanceSlow(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n   at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean skipCheckThis, Boolean fillCache, StackCrawlMark& stackMark)\r\n   at System.Activator.CreateInstance[T]()\r\n"
      },
      "ExpandoObjectToClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToDictionaryEntry": {
        "result": "failure",
        "comment": "    Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n       at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.ContainsException: Assert.Contains() failure: Not found: [Value, ABC]\r\n   at Xunit.Assert.Contains[T](T expected, IEnumerable`1 collection, IEqualityComparer`1 comparer)\r\n"
      },
      "DictionaryEntryToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedFlattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NameBasedUnflattening": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "MethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "GetMethodToProperty": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "PropertyToSetMethod": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: ABC\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: ABC\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NonStaticApi": {
        "result": "success"
      }
    }
  }
]