[
  {
    "name": "DataContractSerializer",
    "version": "4.0.0.0",
    "supports": [],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "success"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Error in line 1 position 14. Expecting state 'Element'.. Encountered 'Text'  with name '', namespace ''. \r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.HandleMemberNotFound(XmlReaderDelegator xmlReader, ExtensionDataObject extensionData, Int32 memberIndex)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.GetMemberIndexWithRequiredMembers(XmlReaderDelegator xmlReader, XmlDictionaryString[] memberNames, XmlDictionaryString[] memberNamespaces, Int32 memberIndex, Int32 requiredIndex, ExtensionDataObject extensionData)\r\n       at ReadDateTimeOffsetFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n       at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n       at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n       at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Error in line 1 position 14. Expecting state 'Element'.. Encountered 'Text'  with name '', namespace ''. \r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.HandleMemberNotFound(XmlReaderDelegator xmlReader, ExtensionDataObject extensionData, Int32 memberIndex)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.GetMemberIndexWithRequiredMembers(XmlReaderDelegator xmlReader, XmlDictionaryString[] memberNames, XmlDictionaryString[] memberNamespaces, Int32 memberIndex, Int32 requiredIndex, ExtensionDataObject extensionData)\r\n   at ReadDateTimeOffsetFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n   at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n   at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n   at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n"
      },
      "Uri": {
        "result": "success"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "success"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "success"
      },
      "HashSetOfString": {
        "result": "success"
      },
      "ISetOfString": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Type 'System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]' with data contract name 'ArrayOfstring:http://schemas.microsoft.com/2003/10/Serialization/Arrays' is not expected. Consider using a DataContractResolver if you are using DataContractSerializer or add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to the serializer.\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n       at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n       at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Type 'System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]' with data contract name 'ArrayOfstring:http://schemas.microsoft.com/2003/10/Serialization/Arrays' is not expected. Consider using a DataContractResolver if you are using DataContractSerializer or add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to the serializer.\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n   at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n   at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n"
      },
      "IReadOnlyListOfString": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Type 'System.String[]' with data contract name 'ArrayOfstring:http://schemas.microsoft.com/2003/10/Serialization/Arrays' is not expected. Consider using a DataContractResolver if you are using DataContractSerializer or add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to the serializer.\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n       at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n       at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Type 'System.String[]' with data contract name 'ArrayOfstring:http://schemas.microsoft.com/2003/10/Serialization/Arrays' is not expected. Consider using a DataContractResolver if you are using DataContractSerializer or add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to the serializer.\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n   at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n   at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n"
      },
      "IReadOnlyCollectionOfString": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Type 'System.String[]' with data contract name 'ArrayOfstring:http://schemas.microsoft.com/2003/10/Serialization/Arrays' is not expected. Consider using a DataContractResolver if you are using DataContractSerializer or add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to the serializer.\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n       at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n       at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Type 'System.String[]' with data contract name 'ArrayOfstring:http://schemas.microsoft.com/2003/10/Serialization/Arrays' is not expected. Consider using a DataContractResolver if you are using DataContractSerializer or add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to the serializer.\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n   at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n   at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n"
      },
      "IEnumerableOfString": {
        "result": "success"
      },
      "Roundtrip": {
        "result": "success"
      },
      "NestedRoundtrip": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Type 'System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]' with data contract name 'ArrayOfKeyValueOfstringanyType:http://schemas.microsoft.com/2003/10/Serialization/Arrays' is not expected. Consider using a DataContractResolver if you are using DataContractSerializer or add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to the serializer.\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n       at WriteKeyValueOfstringanyTypeToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n       at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n       at WriteArrayOfKeyValueOfstringanyTypeToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , CollectionDataContract )\r\n       at System.Runtime.Serialization.CollectionDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n       at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n       at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Type 'System.Collections.Generic.Dictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]' with data contract name 'ArrayOfKeyValueOfstringanyType:http://schemas.microsoft.com/2003/10/Serialization/Arrays' is not expected. Consider using a DataContractResolver if you are using DataContractSerializer or add any types not known statically to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding them to the list of known types passed to the serializer.\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n   at WriteKeyValueOfstringanyTypeToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n   at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n   at WriteArrayOfKeyValueOfstringanyTypeToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , CollectionDataContract )\r\n   at System.Runtime.Serialization.CollectionDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeAndVerifyType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, Boolean verifyKnownType, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithXsiType(XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle objectTypeHandle, Type objectType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle, Type declaredType)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.InternalSerialize(XmlWriterDelegator xmlWriter, Object obj, Boolean isDeclaredType, Boolean writeXsiType, Int32 declaredTypeID, RuntimeTypeHandle declaredTypeHandle)\r\n   at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n   at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n"
      },
      "Basic": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: value\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: value\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\n    Expected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\n    Actual:   (null)\r\n       at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n       at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n    ",
        "error": "Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\nExpected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\nActual:   (null)\r\n   at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n   at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n"
      },
      "ICollection": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: The get-only collection of type 'System.Collections.Generic.ICollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]' returned a null value.  The input stream contains collection items which cannot be added if the instance is null.  Consider initializing the collection in the getter.\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ThrowNullValueReturnedForGetOnlyCollectionException(Type type)\r\n       at ReadArrayOfstringFromXmlIsGetOnly(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString , XmlDictionaryString , CollectionDataContract )\r\n       at System.Runtime.Serialization.CollectionDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n       at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n       at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: The get-only collection of type 'System.Collections.Generic.ICollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]' returned a null value.  The input stream contains collection items which cannot be added if the instance is null.  Consider initializing the collection in the getter.\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ThrowNullValueReturnedForGetOnlyCollectionException(Type type)\r\n   at ReadArrayOfstringFromXmlIsGetOnly(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString , XmlDictionaryString , CollectionDataContract )\r\n   at System.Runtime.Serialization.CollectionDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n   at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n   at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n"
      },
      "ISet": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.InvalidDataContractException: No set method for property 'Value' in type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[System.Collections.Generic.ISet`1[System.String],System.Collections.Generic.HashSet`1[System.String]]'.\r\n       at System.Runtime.Serialization.DataContract.DataContractCriticalHelper.ThrowInvalidDataContractException(String message, Type type)\r\n       at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n       at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n    ",
        "error": "System.Runtime.Serialization.InvalidDataContractException: No set method for property 'Value' in type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[System.Collections.Generic.ISet`1[System.String],System.Collections.Generic.HashSet`1[System.String]]'.\r\n   at System.Runtime.Serialization.DataContract.DataContractCriticalHelper.ThrowInvalidDataContractException(String message, Type type)\r\n   at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n   at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.InvalidDataContractException: No set method for property 'Value' in type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[System.String],FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[System.String]]'.\r\n       at System.Runtime.Serialization.DataContract.DataContractCriticalHelper.ThrowInvalidDataContractException(String message, Type type)\r\n       at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n       at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n    ",
        "error": "System.Runtime.Serialization.InvalidDataContractException: No set method for property 'Value' in type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[System.String],FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[System.String]]'.\r\n   at System.Runtime.Serialization.DataContract.DataContractCriticalHelper.ThrowInvalidDataContractException(String message, Type type)\r\n   at WriteRootToXml(XmlWriterDelegator , Object , XmlObjectSerializerWriteContext , ClassDataContract )\r\n   at System.Runtime.Serialization.ClassDataContract.WriteXmlValue(XmlWriterDelegator xmlWriter, Object obj, XmlObjectSerializerWriteContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.WriteDataContractValue(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.XmlObjectSerializerWriteContext.SerializeWithoutXsiType(DataContract dataContract, XmlWriterDelegator xmlWriter, Object obj, RuntimeTypeHandle declaredTypeHandle)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObjectContent(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalWriteObject(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.WriteObjectHandleExceptions(XmlWriterDelegator writer, Object graph, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.WriteObject(XmlWriter writer, Object graph)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "success"
      },
      "CustomConstructorCalled": {
        "result": "failure",
        "comment": "    Xunit.Sdk.TrueException: Assert.True() Failure\r\n    ",
        "error": "Xunit.Sdk.TrueException: Assert.True() Failure\r\n"
      },
      "CastToInt32": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Element Value from namespace  cannot have child contents to be deserialized as an object. Please use XmlNode[] to deserialize this pattern of XML. ---> System.Xml.XmlException: 'Text' is an invalid XmlNodeType. Line 1, position 14.\r\n       at System.Xml.XmlReader.ReadEndElement()\r\n       at System.Runtime.Serialization.XmlReaderDelegator.ReadEndElement()\r\n       at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n       --- End of inner exception stack trace ---\r\n       at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n       at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n       at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Element Value from namespace  cannot have child contents to be deserialized as an object. Please use XmlNode[] to deserialize this pattern of XML. ---> System.Xml.XmlException: 'Text' is an invalid XmlNodeType. Line 1, position 14.\r\n   at System.Xml.XmlReader.ReadEndElement()\r\n   at System.Runtime.Serialization.XmlReaderDelegator.ReadEndElement()\r\n   at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n   at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n   at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n"
      },
      "CastToString": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Element Value from namespace  cannot have child contents to be deserialized as an object. Please use XmlNode[] to deserialize this pattern of XML. ---> System.Xml.XmlException: 'Text' is an invalid XmlNodeType. Line 1, position 14.\r\n       at System.Xml.XmlReader.ReadEndElement()\r\n       at System.Runtime.Serialization.XmlReaderDelegator.ReadEndElement()\r\n       at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n       --- End of inner exception stack trace ---\r\n       at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n       at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n       at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Element Value from namespace  cannot have child contents to be deserialized as an object. Please use XmlNode[] to deserialize this pattern of XML. ---> System.Xml.XmlException: 'Text' is an invalid XmlNodeType. Line 1, position 14.\r\n   at System.Xml.XmlReader.ReadEndElement()\r\n   at System.Runtime.Serialization.XmlReaderDelegator.ReadEndElement()\r\n   at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n   at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n   at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n"
      },
      "PropertyAccess": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Element Value from namespace  cannot have child contents to be deserialized as an object. Please use XmlNode[] to deserialize this pattern of XML. ---> System.Xml.XmlException: 'Element' is an invalid XmlNodeType. Line 1, position 15.\r\n       at System.Xml.XmlReader.ReadEndElement()\r\n       at System.Runtime.Serialization.XmlReaderDelegator.ReadEndElement()\r\n       at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n       --- End of inner exception stack trace ---\r\n       at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n       at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n       at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Element Value from namespace  cannot have child contents to be deserialized as an object. Please use XmlNode[] to deserialize this pattern of XML. ---> System.Xml.XmlException: 'Element' is an invalid XmlNodeType. Line 1, position 15.\r\n   at System.Xml.XmlReader.ReadEndElement()\r\n   at System.Runtime.Serialization.XmlReaderDelegator.ReadEndElement()\r\n   at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n   at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n   at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    System.Runtime.Serialization.SerializationException: Element Value from namespace  cannot have child contents to be deserialized as an object. Please use XmlNode[] to deserialize this pattern of XML. ---> System.Xml.XmlException: 'Element' is an invalid XmlNodeType. Line 1, position 15.\r\n       at System.Xml.XmlReader.ReadEndElement()\r\n       at System.Runtime.Serialization.XmlReaderDelegator.ReadEndElement()\r\n       at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n       --- End of inner exception stack trace ---\r\n       at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n       at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n       at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n       at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n       at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n       at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n    ",
        "error": "System.Runtime.Serialization.SerializationException: Element Value from namespace  cannot have child contents to be deserialized as an object. Please use XmlNode[] to deserialize this pattern of XML. ---> System.Xml.XmlException: 'Element' is an invalid XmlNodeType. Line 1, position 15.\r\n   at System.Xml.XmlReader.ReadEndElement()\r\n   at System.Runtime.Serialization.XmlReaderDelegator.ReadEndElement()\r\n   at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.Serialization.ObjectDataContract.ReadXmlValue(XmlReaderDelegator reader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Int32 id, RuntimeTypeHandle declaredTypeHandle, String name, String ns)\r\n   at ReadRootFromXml(XmlReaderDelegator , XmlObjectSerializerReadContext , XmlDictionaryString[] , XmlDictionaryString[] )\r\n   at System.Runtime.Serialization.ClassDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)\r\n   at System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)\r\n   at System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)\r\n   at System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlReader reader)\r\n"
      }
    }
  },
  {
    "name": "fastJSON",
    "url": "http://fastjson.codeplex.com/",
    "version": "2.1.15.0",
    "supports": [
      "net20",
      "net35",
      "net40",
      "net40-Client",
      "net45"
    ],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Int64' to type 'System.String'.\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Int64' to type 'System.String'.\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "DateTime": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 02-Aug-14 12:34:56\r\n    Actual:   03-Aug-14 00:34:56\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 02-Aug-14 12:34:56\r\nActual:   03-Aug-14 00:34:56\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "DateTimeOffset": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Invalid cast from 'System.String' to 'System.DateTimeOffset'.\r\n       at System.Convert.DefaultToType(IConvertible value, Type targetType, IFormatProvider provider)\r\n       at System.String.System.IConvertible.ToType(Type type, IFormatProvider provider)\r\n       at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)\r\n       at fastJSON.deserializer.ChangeType(Object value, Type conversionType)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.InvalidCastException: Invalid cast from 'System.String' to 'System.DateTimeOffset'.\r\n   at System.Convert.DefaultToType(IConvertible value, Type targetType, IFormatProvider provider)\r\n   at System.String.System.IConvertible.ToType(Type type, IFormatProvider provider)\r\n   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)\r\n   at fastJSON.deserializer.ChangeType(Object value, Type conversionType)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "Uri": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.String' to type 'System.Uri'.\r\n       at _(Object , Object )\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.String' to type 'System.Uri'.\r\n   at _(Object , Object )\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 1\r\n    Expected: Object[] { \"A\", 5 }\r\n    Actual:   Object[] { \"A\", 5 }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 1\r\nExpected: Object[] { \"A\", 5 }\r\nActual:   Object[] { \"A\", 5 }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "HashSetOfString": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.HashSet`1[System.String]' to type 'System.Collections.IList'.\r\n       at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Collections.Generic.HashSet`1[System.String]' to type 'System.Collections.IList'.\r\n   at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "ISetOfString": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "IReadOnlyListOfString": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "IReadOnlyCollectionOfString": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "IEnumerableOfString": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateGenericList(List`1 data, Type pt, Type bt, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "Roundtrip": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateStringKeyDictionary(Dictionary`2 reader, Type pt, Type[] types, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateStringKeyDictionary(Dictionary`2 reader, Type pt, Type[] types, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "NestedRoundtrip": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateStringKeyDictionary(Dictionary`2 reader, Type pt, Type[] types, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateStringKeyDictionary(Dictionary`2 reader, Type pt, Type[] types, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "Basic": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateStringKeyDictionary(Dictionary`2 reader, Type pt, Type[] types, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateStringKeyDictionary(Dictionary`2 reader, Type pt, Type[] types, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at fastJSON.deserializer.CreateStringKeyDictionary(Dictionary`2 reader, Type pt, Type[] types, Dictionary`2 globalTypes)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at fastJSON.deserializer.CreateStringKeyDictionary(Dictionary`2 reader, Type pt, Type[] types, Dictionary`2 globalTypes)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "ICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Collection<String> { \"A\", \"B\" }\r\n    Actual:   Collection<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Collection<String> { \"A\", \"B\" }\r\nActual:   Collection<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "ISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: HashSet<String> { \"A\", \"B\" }\r\n    Actual:   HashSet<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: HashSet<String> { \"A\", \"B\" }\r\nActual:   HashSet<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: { Value = A }\r\n    Actual:   { Value =  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: { Value = A }\r\nActual:   { Value =  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "failure",
        "comment": "    System.Exception: Failed to fast create instance for type 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor' from assembly 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor, FeatureTests.On.Serializers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at fastJSON.Reflection.FastCreateInstance(Type objtype)\r\n       --- End of inner exception stack trace ---\r\n       at fastJSON.Reflection.FastCreateInstance(Type objtype)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.Exception: Failed to fast create instance for type 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor' from assembly 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor, FeatureTests.On.Serializers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at fastJSON.Reflection.FastCreateInstance(Type objtype)\r\n   --- End of inner exception stack trace ---\r\n   at fastJSON.Reflection.FastCreateInstance(Type objtype)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "CustomConstructorCalled": {
        "result": "failure",
        "comment": "    System.Exception: Failed to fast create instance for type 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor' from assembly 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor, FeatureTests.On.Serializers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at fastJSON.Reflection.FastCreateInstance(Type objtype)\r\n       --- End of inner exception stack trace ---\r\n       at fastJSON.Reflection.FastCreateInstance(Type objtype)\r\n       at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n       at fastJSON.deserializer.ToObject(String json, Type type)\r\n    ",
        "error": "System.Exception: Failed to fast create instance for type 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor' from assembly 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor, FeatureTests.On.Serializers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.DynamicILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at fastJSON.Reflection.FastCreateInstance(Type objtype)\r\n   --- End of inner exception stack trace ---\r\n   at fastJSON.Reflection.FastCreateInstance(Type objtype)\r\n   at fastJSON.deserializer.ParseDictionary(Dictionary`2 d, Dictionary`2 globaltypes, Type type, Object input)\r\n   at fastJSON.deserializer.ToObject(String json, Type type)\r\n"
      },
      "CastToInt32": {
        "result": "success"
      },
      "CastToString": {
        "result": "success"
      },
      "PropertyAccess": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Collections.Generic.Dictionary<string,object>' does not contain a definition for 'property'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Collections.Generic.Dictionary<string,object>' does not contain a definition for 'property'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Collections.Generic.Dictionary<string,object>' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Collections.Generic.Dictionary<string,object>' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n"
      }
    }
  },
  {
    "name": "JavaScriptSerializer",
    "version": "4.0.0.0",
    "supports": [],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "success"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "success"
      },
      "Uri": {
        "result": "success"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "success"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "success"
      },
      "HashSetOfString": {
        "result": "failure",
        "comment": "    System.ArgumentException: Object of type 'System.Collections.Generic.List`1[System.String]' cannot be converted to type 'System.Collections.Generic.HashSet`1[System.String]'.\r\n       at System.RuntimeType.TryChangeType(Object value, Binder binder, CultureInfo culture, Boolean needsSpecialCast)\r\n       at System.RuntimeType.CheckValue(Object value, Binder binder, CultureInfo culture, BindingFlags invokeAttr)\r\n       at System.Reflection.MethodBase.CheckArguments(Object[] parameters, Binder binder, BindingFlags invokeAttr, CultureInfo culture, Signature sig)\r\n       at System.Reflection.RuntimeMethodInfo.InvokeArgumentsCheck(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n       at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n       at System.Web.Script.Serialization.ObjectConverter.AssignToPropertyOrField(Object propertyValue, Object o, String memberName, JavaScriptSerializer serializer, Boolean throwOnError)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertDictionaryToObject(IDictionary`2 dictionary, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeInternal(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeMain(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(JavaScriptSerializer serializer, String input, Type type, Int32 depthLimit)\r\n    ",
        "error": "System.ArgumentException: Object of type 'System.Collections.Generic.List`1[System.String]' cannot be converted to type 'System.Collections.Generic.HashSet`1[System.String]'.\r\n   at System.RuntimeType.TryChangeType(Object value, Binder binder, CultureInfo culture, Boolean needsSpecialCast)\r\n   at System.RuntimeType.CheckValue(Object value, Binder binder, CultureInfo culture, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBase.CheckArguments(Object[] parameters, Binder binder, BindingFlags invokeAttr, CultureInfo culture, Signature sig)\r\n   at System.Reflection.RuntimeMethodInfo.InvokeArgumentsCheck(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Web.Script.Serialization.ObjectConverter.AssignToPropertyOrField(Object propertyValue, Object o, String memberName, JavaScriptSerializer serializer, Boolean throwOnError)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertDictionaryToObject(IDictionary`2 dictionary, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeInternal(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeMain(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(JavaScriptSerializer serializer, String input, Type type, Int32 depthLimit)\r\n"
      },
      "ISetOfString": {
        "result": "failure",
        "comment": "    System.ArgumentException: Object of type 'System.Collections.Generic.List`1[System.String]' cannot be converted to type 'System.Collections.Generic.ISet`1[System.String]'.\r\n       at System.RuntimeType.TryChangeType(Object value, Binder binder, CultureInfo culture, Boolean needsSpecialCast)\r\n       at System.RuntimeType.CheckValue(Object value, Binder binder, CultureInfo culture, BindingFlags invokeAttr)\r\n       at System.Reflection.MethodBase.CheckArguments(Object[] parameters, Binder binder, BindingFlags invokeAttr, CultureInfo culture, Signature sig)\r\n       at System.Reflection.RuntimeMethodInfo.InvokeArgumentsCheck(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n       at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n       at System.Web.Script.Serialization.ObjectConverter.AssignToPropertyOrField(Object propertyValue, Object o, String memberName, JavaScriptSerializer serializer, Boolean throwOnError)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertDictionaryToObject(IDictionary`2 dictionary, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeInternal(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeMain(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(JavaScriptSerializer serializer, String input, Type type, Int32 depthLimit)\r\n    ",
        "error": "System.ArgumentException: Object of type 'System.Collections.Generic.List`1[System.String]' cannot be converted to type 'System.Collections.Generic.ISet`1[System.String]'.\r\n   at System.RuntimeType.TryChangeType(Object value, Binder binder, CultureInfo culture, Boolean needsSpecialCast)\r\n   at System.RuntimeType.CheckValue(Object value, Binder binder, CultureInfo culture, BindingFlags invokeAttr)\r\n   at System.Reflection.MethodBase.CheckArguments(Object[] parameters, Binder binder, BindingFlags invokeAttr, CultureInfo culture, Signature sig)\r\n   at System.Reflection.RuntimeMethodInfo.InvokeArgumentsCheck(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Web.Script.Serialization.ObjectConverter.AssignToPropertyOrField(Object propertyValue, Object o, String memberName, JavaScriptSerializer serializer, Boolean throwOnError)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertDictionaryToObject(IDictionary`2 dictionary, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeInternal(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeMain(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(JavaScriptSerializer serializer, String input, Type type, Int32 depthLimit)\r\n"
      },
      "IReadOnlyListOfString": {
        "result": "success"
      },
      "IReadOnlyCollectionOfString": {
        "result": "success"
      },
      "IEnumerableOfString": {
        "result": "success"
      },
      "Roundtrip": {
        "result": "success"
      },
      "NestedRoundtrip": {
        "result": "success"
      },
      "Basic": {
        "result": "success"
      },
      "Nested": {
        "result": "success"
      },
      "ICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Collection<String> { \"A\", \"B\" }\r\n    Actual:   Collection<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Collection<String> { \"A\", \"B\" }\r\nActual:   Collection<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "ISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: HashSet<String> { \"A\", \"B\" }\r\n    Actual:   HashSet<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: HashSet<String> { \"A\", \"B\" }\r\nActual:   HashSet<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: { Value = A }\r\n    Actual:   { Value =  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: { Value = A }\r\nActual:   { Value =  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "failure",
        "comment": "    System.MissingMethodException: No parameterless constructor defined for type of 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor'.\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertDictionaryToObject(IDictionary`2 dictionary, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeInternal(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeMain(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(JavaScriptSerializer serializer, String input, Type type, Int32 depthLimit)\r\n    ",
        "error": "System.MissingMethodException: No parameterless constructor defined for type of 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor'.\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertDictionaryToObject(IDictionary`2 dictionary, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeInternal(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeMain(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(JavaScriptSerializer serializer, String input, Type type, Int32 depthLimit)\r\n"
      },
      "CustomConstructorCalled": {
        "result": "failure",
        "comment": "    System.MissingMethodException: No parameterless constructor defined for type of 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor'.\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertDictionaryToObject(IDictionary`2 dictionary, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeInternal(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeMain(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n       at System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(JavaScriptSerializer serializer, String input, Type type, Int32 depthLimit)\r\n    ",
        "error": "System.MissingMethodException: No parameterless constructor defined for type of 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor'.\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertDictionaryToObject(IDictionary`2 dictionary, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeInternal(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.ObjectConverter.ConvertObjectToTypeMain(Object o, Type type, JavaScriptSerializer serializer, Boolean throwOnError, Object& convertedObject)\r\n   at System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(JavaScriptSerializer serializer, String input, Type type, Int32 depthLimit)\r\n"
      },
      "CastToInt32": {
        "result": "success"
      },
      "CastToString": {
        "result": "success"
      },
      "PropertyAccess": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Collections.Generic.Dictionary<string,object>' does not contain a definition for 'property'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Collections.Generic.Dictionary<string,object>' does not contain a definition for 'property'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Collections.Generic.Dictionary<string,object>' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Collections.Generic.Dictionary<string,object>' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n"
      }
    }
  },
  {
    "name": "NETJson",
    "url": "https://github.com/rpgmaker/NetJSON",
    "version": "1.0.7",
    "supports": [
      "net35",
      "net40",
      "net40-Client",
      "net45"
    ],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: 5\r\n    Actual:   :Root\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: 5\r\nActual:   :Root\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "failure",
        "comment": "    System.InvalidProgramException: Common Language Runtime detected an invalid program.\r\n       at RootClassWithSingleProperty`1DateTimeOffsetClass.SetRootClassWithSinglePropertyDateTimeOffset(Char* , Int32& , RootClassWithSingleProperty`1 , String )\r\n       at RootClassWithSingleProperty`1DateTimeOffsetClass.CreateClassOrDictRootClassWithSinglePropertyDateTimeOffset(Char* , Int32& )\r\n       at RootClassWithSingleProperty`1DateTimeOffsetClass.ReadRootClassWithSinglePropertyDateTimeOffset(String )\r\n       at RootClassWithSingleProperty`1DateTimeOffsetClass.Deserialize(String )\r\n       at DeserializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.DateTimeOffset, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](String )\r\n       at NetJSON.NetJSON.Deserialize(Type type, String value)\r\n    ",
        "error": "System.InvalidProgramException: Common Language Runtime detected an invalid program.\r\n   at RootClassWithSingleProperty`1DateTimeOffsetClass.SetRootClassWithSinglePropertyDateTimeOffset(Char* , Int32& , RootClassWithSingleProperty`1 , String )\r\n   at RootClassWithSingleProperty`1DateTimeOffsetClass.CreateClassOrDictRootClassWithSinglePropertyDateTimeOffset(Char* , Int32& )\r\n   at RootClassWithSingleProperty`1DateTimeOffsetClass.ReadRootClassWithSinglePropertyDateTimeOffset(String )\r\n   at RootClassWithSingleProperty`1DateTimeOffsetClass.Deserialize(String )\r\n   at DeserializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.DateTimeOffset, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](String )\r\n   at NetJSON.NetJSON.Deserialize(Type type, String value)\r\n"
      },
      "Uri": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n       at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.Generate(Type objType)\r\n       at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at NetJSON.NetJSON.GetSerializer[T]()\r\n       at DeserializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](String )\r\n       at NetJSON.NetJSON.Deserialize(Type type, String value)\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n   at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.Generate(Type objType)\r\n   at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at NetJSON.NetJSON.GetSerializer[T]()\r\n   at DeserializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](String )\r\n   at NetJSON.NetJSON.Deserialize(Type type, String value)\r\n"
      },
      "ArrayOfString": {
        "result": "failure",
        "comment": "    System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n       at RootClassWithSingleProperty`1String\\[\\]Class.WriteStringArray(String[] , StringBuilder )\r\n       at RootClassWithSingleProperty`1String\\[\\]Class.WriteRootClassWithSinglePropertyStringArray(RootClassWithSingleProperty`1 , StringBuilder )\r\n       at RootClassWithSingleProperty`1String\\[\\]Class.Serialize(RootClassWithSingleProperty`1 )\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.String[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n   at RootClassWithSingleProperty`1String\\[\\]Class.WriteStringArray(String[] , StringBuilder )\r\n   at RootClassWithSingleProperty`1String\\[\\]Class.WriteRootClassWithSinglePropertyStringArray(RootClassWithSingleProperty`1 , StringBuilder )\r\n   at RootClassWithSingleProperty`1String\\[\\]Class.Serialize(RootClassWithSingleProperty`1 )\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.String[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "ArrayOfObject": {
        "result": "success"
      },
      "ListOfString": {
        "result": "failure",
        "comment": "    System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n       at RootClassWithSingleProperty`1List`1StringClass.WriteListString(List`1 , StringBuilder )\r\n       at RootClassWithSingleProperty`1List`1StringClass.WriteRootClassWithSinglePropertyListString(RootClassWithSingleProperty`1 , StringBuilder )\r\n       at RootClassWithSingleProperty`1List`1StringClass.Serialize(RootClassWithSingleProperty`1 )\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n   at RootClassWithSingleProperty`1List`1StringClass.WriteListString(List`1 , StringBuilder )\r\n   at RootClassWithSingleProperty`1List`1StringClass.WriteRootClassWithSinglePropertyListString(RootClassWithSingleProperty`1 , StringBuilder )\r\n   at RootClassWithSingleProperty`1List`1StringClass.Serialize(RootClassWithSingleProperty`1 )\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "IListOfString": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at NetJSON.NetJSON.GenerateCreateListFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n       at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.Generate(Type objType)\r\n       at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at NetJSON.NetJSON.GetSerializer[T]()\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at NetJSON.NetJSON.GenerateCreateListFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n   at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.Generate(Type objType)\r\n   at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at NetJSON.NetJSON.GetSerializer[T]()\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "HashSetOfString": {
        "result": "failure",
        "comment": "    System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n       at RootClassWithSingleProperty`1HashSet`1StringClass.WriteHashSetString(HashSet`1 , StringBuilder )\r\n       at RootClassWithSingleProperty`1HashSet`1StringClass.WriteRootClassWithSinglePropertyHashSetString(RootClassWithSingleProperty`1 , StringBuilder )\r\n       at RootClassWithSingleProperty`1HashSet`1StringClass.Serialize(RootClassWithSingleProperty`1 )\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n   at RootClassWithSingleProperty`1HashSet`1StringClass.WriteHashSetString(HashSet`1 , StringBuilder )\r\n   at RootClassWithSingleProperty`1HashSet`1StringClass.WriteRootClassWithSinglePropertyHashSetString(RootClassWithSingleProperty`1 , StringBuilder )\r\n   at RootClassWithSingleProperty`1HashSet`1StringClass.Serialize(RootClassWithSingleProperty`1 )\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "ISetOfString": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at NetJSON.NetJSON.GenerateCreateListFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n       at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.Generate(Type objType)\r\n       at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at NetJSON.NetJSON.GetSerializer[T]()\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at NetJSON.NetJSON.GenerateCreateListFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n   at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.Generate(Type objType)\r\n   at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at NetJSON.NetJSON.GetSerializer[T]()\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "IReadOnlyListOfString": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n       at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.Generate(Type objType)\r\n       at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at NetJSON.NetJSON.GetSerializer[T]()\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n   at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.Generate(Type objType)\r\n   at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at NetJSON.NetJSON.GetSerializer[T]()\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "IReadOnlyCollectionOfString": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n       at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.Generate(Type objType)\r\n       at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at NetJSON.NetJSON.GetSerializer[T]()\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n   at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.Generate(Type objType)\r\n   at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at NetJSON.NetJSON.GetSerializer[T]()\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "IEnumerableOfString": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n       at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.Generate(Type objType)\r\n       at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at NetJSON.NetJSON.GetSerializer[T]()\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateExtractValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.GenerateSetValueFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.<>c__DisplayClass23.<GenerateGetClassOrDictFor>b__1e(ILGenerator msil, LocalBuilder current, LocalBuilder ptr, Label startLoop, Label bLabel)\r\n   at NetJSON.NetJSON.ILFixedWhile(ILGenerator il, Action`5 whileAction, Boolean needBreak, Action`1 returnAction, Action`2 beforeAction, Action`2 beginIndexIf, Action`2 endIndexIf)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.Generate(Type objType)\r\n   at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at NetJSON.NetJSON.GetSerializer[T]()\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "Roundtrip": {
        "result": "success"
      },
      "NestedRoundtrip": {
        "result": "success"
      },
      "Basic": {
        "result": "success"
      },
      "Nested": {
        "result": "success"
      },
      "ICollection": {
        "result": "failure",
        "comment": "    System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n       at RootClassWithSingleReadOnlyProperty`2ICollection`1StringCollection`1StringClass.WriteICollectionString(ICollection`1 , StringBuilder )\r\n       at RootClassWithSingleReadOnlyProperty`2ICollection`1StringCollection`1StringClass.WriteRootClassWithSingleReadOnlyPropertyICollectionStringCollectionString(RootClassWithSingleReadOnlyProperty`2 , StringBuilder )\r\n       at RootClassWithSingleReadOnlyProperty`2ICollection`1StringCollection`1StringClass.Serialize(RootClassWithSingleReadOnlyProperty`2 )\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[[System.Collections.Generic.ICollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.ObjectModel.Collection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n   at RootClassWithSingleReadOnlyProperty`2ICollection`1StringCollection`1StringClass.WriteICollectionString(ICollection`1 , StringBuilder )\r\n   at RootClassWithSingleReadOnlyProperty`2ICollection`1StringCollection`1StringClass.WriteRootClassWithSingleReadOnlyPropertyICollectionStringCollectionString(RootClassWithSingleReadOnlyProperty`2 , StringBuilder )\r\n   at RootClassWithSingleReadOnlyProperty`2ICollection`1StringCollection`1StringClass.Serialize(RootClassWithSingleReadOnlyProperty`2 )\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[[System.Collections.Generic.ICollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.ObjectModel.Collection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "ISet": {
        "result": "failure",
        "comment": "    System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n       at RootClassWithSingleReadOnlyProperty`2ISet`1StringHashSet`1StringClass.WriteISetString(ISet`1 , StringBuilder )\r\n       at RootClassWithSingleReadOnlyProperty`2ISet`1StringHashSet`1StringClass.WriteRootClassWithSingleReadOnlyPropertyISetStringHashSetString(RootClassWithSingleReadOnlyProperty`2 , StringBuilder )\r\n       at RootClassWithSingleReadOnlyProperty`2ISet`1StringHashSet`1StringClass.Serialize(RootClassWithSingleReadOnlyProperty`2 )\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[[System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n   at RootClassWithSingleReadOnlyProperty`2ISet`1StringHashSet`1StringClass.WriteISetString(ISet`1 , StringBuilder )\r\n   at RootClassWithSingleReadOnlyProperty`2ISet`1StringHashSet`1StringClass.WriteRootClassWithSingleReadOnlyPropertyISetStringHashSetString(RootClassWithSingleReadOnlyProperty`2 , StringBuilder )\r\n   at RootClassWithSingleReadOnlyProperty`2ISet`1StringHashSet`1StringClass.Serialize(RootClassWithSingleReadOnlyProperty`2 )\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[[System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n       at RootClassWithSingleReadOnlyProperty`2ClassWithSingleProperty`1StringClassWithSingleProperty`1StringClass.WriteClassWithSinglePropertyString(ClassWithSingleProperty`1 , StringBuilder )\r\n       at RootClassWithSingleReadOnlyProperty`2ClassWithSingleProperty`1StringClassWithSingleProperty`1StringClass.WriteRootClassWithSingleReadOnlyPropertyClassWithSinglePropertyStringClassWithSinglePropertyString(RootClassWithSingleReadOnlyProperty`2 , StringBuilder )\r\n       at RootClassWithSingleReadOnlyProperty`2ClassWithSingleProperty`1StringClassWithSingleProperty`1StringClass.Serialize(RootClassWithSingleReadOnlyProperty`2 )\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[[FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], FeatureTests.On.Serializers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], FeatureTests.On.Serializers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeLoadException: Could not load type 'RootClassWithCustomConstructorClass' from assembly 'RootClassWithCustomConstructorClass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n   at RootClassWithSingleReadOnlyProperty`2ClassWithSingleProperty`1StringClassWithSingleProperty`1StringClass.WriteClassWithSinglePropertyString(ClassWithSingleProperty`1 , StringBuilder )\r\n   at RootClassWithSingleReadOnlyProperty`2ClassWithSingleProperty`1StringClassWithSingleProperty`1StringClass.WriteRootClassWithSingleReadOnlyPropertyClassWithSinglePropertyStringClassWithSinglePropertyString(RootClassWithSingleReadOnlyProperty`2 , StringBuilder )\r\n   at RootClassWithSingleReadOnlyProperty`2ClassWithSingleProperty`1StringClassWithSingleProperty`1StringClass.Serialize(RootClassWithSingleReadOnlyProperty`2 )\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithSingleReadOnlyProperty`2[[FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], FeatureTests.On.Serializers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], FeatureTests.On.Serializers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.Generate(Type objType)\r\n       at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at NetJSON.NetJSON.GetSerializer[T]()\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor(Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.Generate(Type objType)\r\n   at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at NetJSON.NetJSON.GetSerializer[T]()\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor(Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "CustomConstructorCalled": {
        "result": "failure",
        "comment": "    System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: con\r\n       at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n       at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n       at NetJSON.NetJSON.Generate(Type objType)\r\n       at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n       --- End of inner exception stack trace ---\r\n       at NetJSON.NetJSON.GetSerializer[T]()\r\n       at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor(Object )\r\n       at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n    ",
        "error": "System.TypeInitializationException: The type initializer for 'NetJSONCachedSerializer`1' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: con\r\n   at System.Reflection.Emit.ILGenerator.Emit(OpCode opcode, ConstructorInfo con)\r\n   at NetJSON.NetJSON.GenerateGetClassOrDictFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.WriteDeserializeMethodFor(TypeBuilder typeBuilder, Type type)\r\n   at NetJSON.NetJSON.Generate(Type objType)\r\n   at NetJSON.NetJSON.NetJSONCachedSerializer`1..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at NetJSON.NetJSON.GetSerializer[T]()\r\n   at SerializeFeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor(Object )\r\n   at NetJSON.NetJSON.Serialize(Type type, Object value)\r\n"
      },
      "CastToInt32": {
        "result": "success"
      },
      "CastToString": {
        "result": "success"
      },
      "PropertyAccess": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Collections.Generic.Dictionary<string,object>' does not contain a definition for 'property'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Collections.Generic.Dictionary<string,object>' does not contain a definition for 'property'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Collections.Generic.Dictionary<string,object>' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Collections.Generic.Dictionary<string,object>' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      }
    }
  },
  {
    "name": "Newtonsoft.Json",
    "url": "http://www.newtonsoft.com/json",
    "version": "6.0.8",
    "supports": [
      "net20",
      "net35",
      "net40",
      "net40-Client",
      "net45",
      "win",
      "wpa81",
      "wp80",
      "sl50",
      "aspnetcore50"
    ],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "success"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "success"
      },
      "Uri": {
        "result": "success"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 1\r\n    Expected: Object[] { \"A\", 5 }\r\n    Actual:   Object[] { \"A\", 5 }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 1\r\nExpected: Object[] { \"A\", 5 }\r\nActual:   Object[] { \"A\", 5 }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "success"
      },
      "HashSetOfString": {
        "result": "success"
      },
      "ISetOfString": {
        "result": "success"
      },
      "IReadOnlyListOfString": {
        "result": "success"
      },
      "IReadOnlyCollectionOfString": {
        "result": "success"
      },
      "IEnumerableOfString": {
        "result": "success"
      },
      "Roundtrip": {
        "result": "success"
      },
      "NestedRoundtrip": {
        "result": "failure",
        "comment": "    Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\n    Expected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\n    Actual:   Newtonsoft.Json.Linq.JObject\r\n       at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n       at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n    ",
        "error": "Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\nExpected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\nActual:   Newtonsoft.Json.Linq.JObject\r\n   at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n   at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n"
      },
      "Basic": {
        "result": "success"
      },
      "Nested": {
        "result": "failure",
        "comment": "    Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\n    Expected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\n    Actual:   Newtonsoft.Json.Linq.JObject\r\n       at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n       at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n    ",
        "error": "Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\nExpected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\nActual:   Newtonsoft.Json.Linq.JObject\r\n   at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n   at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n"
      },
      "ICollection": {
        "result": "success"
      },
      "ISet": {
        "result": "success"
      },
      "MutableClass": {
        "result": "success"
      },
      "CustomConstructorDeserialized": {
        "result": "success"
      },
      "CustomConstructorCalled": {
        "result": "success"
      },
      "CastToInt32": {
        "result": "success"
      },
      "CastToString": {
        "result": "success"
      },
      "PropertyAccess": {
        "result": "success"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'Newtonsoft.Json.Linq.JObject' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'Newtonsoft.Json.Linq.JObject' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      }
    }
  },
  {
    "name": "NFormats.Xml",
    "url": "https://github.com/a7b0/nformats.xml",
    "version": "0.1.0",
    "supports": [
      "net40",
      "net40-Client",
      "net45"
    ],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "success"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "success"
      },
      "Uri": {
        "result": "success"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "success"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "success"
      },
      "HashSetOfString": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Object[] { \"A\", \"B\" }\r\n    Actual:   Object[] {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Object[] { \"A\", \"B\" }\r\nActual:   Object[] {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ISetOfString": {
        "result": "failure",
        "comment": "    NFormats.Xml.TypeResolvers.XmlTypeResolveException: Error at resolve type \"System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\".\r\n       at NFormats.Xml.TypeResolvers.XmlTypeResolver.ResolveTypeName(String typeName)\r\n       at NFormats.Xml.TypeResolvers.XmlTypeResolver.ResolveTypeName(Type rootType, String typeName)\r\n       at NFormats.Xml.XmlSerializationContext.ReadSystemAttributes(XmlReader reader, Type& valueType)\r\n       at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n       at lambda_method(Closure , XmlReader , XmlSerializationContext )\r\n       at NFormats.Xml.Converters.Objects.XmlObjectConverterGenerator.XmlGeneratedObjectConverter.ReadXml(XmlReader reader, XmlSerializationContext context)\r\n       at NFormats.Xml.XmlSerializationContext.ReadXml(XmlReader reader, XmlMemberInfo memberInfo, XmlTypeInfo typeInfo)\r\n       at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n       at NFormats.Xml.XmlSerializer.Deserialize(XmlReader reader, Type valueType)\r\n       at NFormats.Xml.XmlSerializer.Deserialize(TextReader input, Type valueType)\r\n    ",
        "error": "NFormats.Xml.TypeResolvers.XmlTypeResolveException: Error at resolve type \"System.Collections.Generic.HashSet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]\".\r\n   at NFormats.Xml.TypeResolvers.XmlTypeResolver.ResolveTypeName(String typeName)\r\n   at NFormats.Xml.TypeResolvers.XmlTypeResolver.ResolveTypeName(Type rootType, String typeName)\r\n   at NFormats.Xml.XmlSerializationContext.ReadSystemAttributes(XmlReader reader, Type& valueType)\r\n   at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n   at lambda_method(Closure , XmlReader , XmlSerializationContext )\r\n   at NFormats.Xml.Converters.Objects.XmlObjectConverterGenerator.XmlGeneratedObjectConverter.ReadXml(XmlReader reader, XmlSerializationContext context)\r\n   at NFormats.Xml.XmlSerializationContext.ReadXml(XmlReader reader, XmlMemberInfo memberInfo, XmlTypeInfo typeInfo)\r\n   at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n   at NFormats.Xml.XmlSerializer.Deserialize(XmlReader reader, Type valueType)\r\n   at NFormats.Xml.XmlSerializer.Deserialize(TextReader input, Type valueType)\r\n"
      },
      "IReadOnlyListOfString": {
        "result": "success"
      },
      "IReadOnlyCollectionOfString": {
        "result": "success"
      },
      "IEnumerableOfString": {
        "result": "success"
      },
      "Roundtrip": {
        "result": "success"
      },
      "NestedRoundtrip": {
        "result": "success"
      },
      "Basic": {
        "result": "failure",
        "comment": "    NFormats.Xml.XmlSerializationException: Converter for type \"System.Collections.Generic.IDictionary`2[System.String,System.Object]\" is not found.\r\n       at NFormats.Xml.XmlSerializationSettings.GetConverter(XmlContract contract)\r\n       at NFormats.Xml.XmlSerializationSettings.GetTypeInfo(Type valueType)\r\n       at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n       at lambda_method(Closure , XmlReader , XmlSerializationContext )\r\n       at NFormats.Xml.Converters.Objects.XmlObjectConverterGenerator.XmlGeneratedObjectConverter.ReadXml(XmlReader reader, XmlSerializationContext context)\r\n       at NFormats.Xml.XmlSerializationContext.ReadXml(XmlReader reader, XmlMemberInfo memberInfo, XmlTypeInfo typeInfo)\r\n       at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n       at NFormats.Xml.XmlSerializer.Deserialize(XmlReader reader, Type valueType)\r\n       at NFormats.Xml.XmlSerializer.Deserialize(TextReader input, Type valueType)\r\n    ",
        "error": "NFormats.Xml.XmlSerializationException: Converter for type \"System.Collections.Generic.IDictionary`2[System.String,System.Object]\" is not found.\r\n   at NFormats.Xml.XmlSerializationSettings.GetConverter(XmlContract contract)\r\n   at NFormats.Xml.XmlSerializationSettings.GetTypeInfo(Type valueType)\r\n   at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n   at lambda_method(Closure , XmlReader , XmlSerializationContext )\r\n   at NFormats.Xml.Converters.Objects.XmlObjectConverterGenerator.XmlGeneratedObjectConverter.ReadXml(XmlReader reader, XmlSerializationContext context)\r\n   at NFormats.Xml.XmlSerializationContext.ReadXml(XmlReader reader, XmlMemberInfo memberInfo, XmlTypeInfo typeInfo)\r\n   at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n   at NFormats.Xml.XmlSerializer.Deserialize(XmlReader reader, Type valueType)\r\n   at NFormats.Xml.XmlSerializer.Deserialize(TextReader input, Type valueType)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    NFormats.Xml.XmlSerializationException: Converter for type \"System.Collections.Generic.IDictionary`2[System.String,System.Object]\" is not found.\r\n       at NFormats.Xml.XmlSerializationSettings.GetConverter(XmlContract contract)\r\n       at NFormats.Xml.XmlSerializationSettings.GetTypeInfo(Type valueType)\r\n       at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n       at lambda_method(Closure , XmlReader , XmlSerializationContext )\r\n       at NFormats.Xml.Converters.Objects.XmlObjectConverterGenerator.XmlGeneratedObjectConverter.ReadXml(XmlReader reader, XmlSerializationContext context)\r\n       at NFormats.Xml.XmlSerializationContext.ReadXml(XmlReader reader, XmlMemberInfo memberInfo, XmlTypeInfo typeInfo)\r\n       at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n       at NFormats.Xml.XmlSerializer.Deserialize(XmlReader reader, Type valueType)\r\n       at NFormats.Xml.XmlSerializer.Deserialize(TextReader input, Type valueType)\r\n    ",
        "error": "NFormats.Xml.XmlSerializationException: Converter for type \"System.Collections.Generic.IDictionary`2[System.String,System.Object]\" is not found.\r\n   at NFormats.Xml.XmlSerializationSettings.GetConverter(XmlContract contract)\r\n   at NFormats.Xml.XmlSerializationSettings.GetTypeInfo(Type valueType)\r\n   at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n   at lambda_method(Closure , XmlReader , XmlSerializationContext )\r\n   at NFormats.Xml.Converters.Objects.XmlObjectConverterGenerator.XmlGeneratedObjectConverter.ReadXml(XmlReader reader, XmlSerializationContext context)\r\n   at NFormats.Xml.XmlSerializationContext.ReadXml(XmlReader reader, XmlMemberInfo memberInfo, XmlTypeInfo typeInfo)\r\n   at NFormats.Xml.XmlSerializationContext.Deserialize(XmlReader reader, Type valueType, XmlMemberInfo memberInfo)\r\n   at NFormats.Xml.XmlSerializer.Deserialize(XmlReader reader, Type valueType)\r\n   at NFormats.Xml.XmlSerializer.Deserialize(TextReader input, Type valueType)\r\n"
      },
      "ICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Collection<String> { \"A\", \"B\" }\r\n    Actual:   Collection<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Collection<String> { \"A\", \"B\" }\r\nActual:   Collection<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "ISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: HashSet<String> { \"A\", \"B\" }\r\n    Actual:   HashSet<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: HashSet<String> { \"A\", \"B\" }\r\nActual:   HashSet<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: { Value = A }\r\n    Actual:   { Value =  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: { Value = A }\r\nActual:   { Value =  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "failure",
        "comment": "    NFormats.Xml.XmlSerializationException: Converter for type \"FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor\" is not found.\r\n       at NFormats.Xml.XmlSerializationSettings.GetConverter(XmlContract contract)\r\n       at NFormats.Xml.XmlSerializationSettings.GetTypeInfo(Type valueType)\r\n       at NFormats.Xml.XmlSerializationContext.Serialize(XmlWriter writer, Object value, Type memberType, XmlMemberInfo memberInfo)\r\n       at NFormats.Xml.XmlSerializationContext.Serialize(XmlWriter writer, Object value, Type valueType)\r\n       at NFormats.Xml.XmlSerializer.Serialize(XmlWriter writer, Type valueType, Object value, IEnumerable`1 namespaces)\r\n       at NFormats.Xml.XmlSerializer.Serialize(TextWriter output, Type valueType, Object value, IEnumerable`1 namespaces)\r\n       at NFormats.Xml.XmlSerializer.Serialize[T](TextWriter output, T value, IEnumerable`1 namespaces)\r\n    ",
        "error": "NFormats.Xml.XmlSerializationException: Converter for type \"FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor\" is not found.\r\n   at NFormats.Xml.XmlSerializationSettings.GetConverter(XmlContract contract)\r\n   at NFormats.Xml.XmlSerializationSettings.GetTypeInfo(Type valueType)\r\n   at NFormats.Xml.XmlSerializationContext.Serialize(XmlWriter writer, Object value, Type memberType, XmlMemberInfo memberInfo)\r\n   at NFormats.Xml.XmlSerializationContext.Serialize(XmlWriter writer, Object value, Type valueType)\r\n   at NFormats.Xml.XmlSerializer.Serialize(XmlWriter writer, Type valueType, Object value, IEnumerable`1 namespaces)\r\n   at NFormats.Xml.XmlSerializer.Serialize(TextWriter output, Type valueType, Object value, IEnumerable`1 namespaces)\r\n   at NFormats.Xml.XmlSerializer.Serialize[T](TextWriter output, T value, IEnumerable`1 namespaces)\r\n"
      },
      "CustomConstructorCalled": {
        "result": "failure",
        "comment": "    NFormats.Xml.XmlSerializationException: Converter for type \"FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor\" is not found.\r\n       at NFormats.Xml.XmlSerializationSettings.GetConverter(XmlContract contract)\r\n       at NFormats.Xml.XmlSerializationSettings.GetTypeInfo(Type valueType)\r\n       at NFormats.Xml.XmlSerializationContext.Serialize(XmlWriter writer, Object value, Type memberType, XmlMemberInfo memberInfo)\r\n       at NFormats.Xml.XmlSerializationContext.Serialize(XmlWriter writer, Object value, Type valueType)\r\n       at NFormats.Xml.XmlSerializer.Serialize(XmlWriter writer, Type valueType, Object value, IEnumerable`1 namespaces)\r\n       at NFormats.Xml.XmlSerializer.Serialize(TextWriter output, Type valueType, Object value, IEnumerable`1 namespaces)\r\n       at NFormats.Xml.XmlSerializer.Serialize[T](TextWriter output, T value, IEnumerable`1 namespaces)\r\n    ",
        "error": "NFormats.Xml.XmlSerializationException: Converter for type \"FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor\" is not found.\r\n   at NFormats.Xml.XmlSerializationSettings.GetConverter(XmlContract contract)\r\n   at NFormats.Xml.XmlSerializationSettings.GetTypeInfo(Type valueType)\r\n   at NFormats.Xml.XmlSerializationContext.Serialize(XmlWriter writer, Object value, Type memberType, XmlMemberInfo memberInfo)\r\n   at NFormats.Xml.XmlSerializationContext.Serialize(XmlWriter writer, Object value, Type valueType)\r\n   at NFormats.Xml.XmlSerializer.Serialize(XmlWriter writer, Type valueType, Object value, IEnumerable`1 namespaces)\r\n   at NFormats.Xml.XmlSerializer.Serialize(TextWriter output, Type valueType, Object value, IEnumerable`1 namespaces)\r\n   at NFormats.Xml.XmlSerializer.Serialize[T](TextWriter output, T value, IEnumerable`1 namespaces)\r\n"
      },
      "CastToInt32": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Specified cast is not valid.\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "System.InvalidCastException: Specified cast is not valid.\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "CastToString": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Object' to type 'System.String'.\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Object' to type 'System.String'.\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "PropertyAccess": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'object' does not contain a definition for 'property'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'object' does not contain a definition for 'property'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Object' to type 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[System.String]'.\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Object' to type 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[System.String]'.\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      }
    }
  },
  {
    "name": "ServiceStack JSON",
    "url": "https://github.com/ServiceStack/ServiceStack.Text",
    "version": "4.0.40",
    "supports": [
      "net40",
      "net40-Client",
      "net45",
      "win",
      "sl50",
      "MonoAndroid",
      "MonoTouch",
      "xamarinios10"
    ],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "success"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "success"
      },
      "Uri": {
        "result": "success"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 1\r\n    Expected: Object[] { \"A\", 5 }\r\n    Actual:   Object[] { \"A\", \"5\" }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 1\r\nExpected: Object[] { \"A\", 5 }\r\nActual:   Object[] { \"A\", \"5\" }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "success"
      },
      "HashSetOfString": {
        "result": "success"
      },
      "ISetOfString": {
        "result": "failure",
        "comment": "    System.ArgumentNullException: Value cannot be null.\r\n    Parameter name: source\r\n       at System.Linq.Enumerable.Cast[TResult](IEnumerable source)\r\n    ",
        "error": "System.ArgumentNullException: Value cannot be null.\r\nParameter name: source\r\n   at System.Linq.Enumerable.Cast[TResult](IEnumerable source)\r\n"
      },
      "IReadOnlyListOfString": {
        "result": "success"
      },
      "IReadOnlyCollectionOfString": {
        "result": "success"
      },
      "IEnumerableOfString": {
        "result": "success"
      },
      "Roundtrip": {
        "result": "success"
      },
      "NestedRoundtrip": {
        "result": "failure",
        "comment": "    Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\n    Expected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\n    Actual:   System.String\r\n       at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n       at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n    ",
        "error": "Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\nExpected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\nActual:   System.String\r\n   at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n   at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n"
      },
      "Basic": {
        "result": "success"
      },
      "Nested": {
        "result": "failure",
        "comment": "    Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\n    Expected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\n    Actual:   System.String\r\n       at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n       at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n    ",
        "error": "Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\nExpected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\nActual:   System.String\r\n   at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n   at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n"
      },
      "ICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Collection<String> { \"A\", \"B\" }\r\n    Actual:   Collection<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Collection<String> { \"A\", \"B\" }\r\nActual:   Collection<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "ISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: HashSet<String> { \"A\", \"B\" }\r\n    Actual:   HashSet<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: HashSet<String> { \"A\", \"B\" }\r\nActual:   HashSet<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: { Value = A }\r\n    Actual:   { Value =  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: { Value = A }\r\nActual:   { Value =  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "success"
      },
      "CustomConstructorCalled": {
        "result": "failure",
        "comment": "    Xunit.Sdk.TrueException: Assert.True() Failure\r\n    ",
        "error": "Xunit.Sdk.TrueException: Assert.True() Failure\r\n"
      },
      "CastToInt32": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'string' to 'int'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'string' to 'int'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "CastToString": {
        "result": "success"
      },
      "PropertyAccess": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'string' does not contain a definition for 'property'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'string' does not contain a definition for 'property'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'string' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'string' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      }
    }
  },
  {
    "name": "XmlSerializer",
    "version": "4.0.0.0",
    "supports": [],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "success"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 02-Aug-14 12:34:56 +03:00\r\n    Actual:   01-Jan-01 00:00:00 +00:00\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 02-Aug-14 12:34:56 +03:00\r\nActual:   01-Jan-01 00:00:00 +00:00\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Uri": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Uri]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Uri', see inner exception for more details. ---> System.InvalidOperationException: System.Uri cannot be serialized because it does not have a parameterless constructor.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Uri]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Uri', see inner exception for more details. ---> System.InvalidOperationException: System.Uri cannot be serialized because it does not have a parameterless constructor.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "success"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IList`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IList`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "HashSetOfString": {
        "result": "success"
      },
      "ISetOfString": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.ISet`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.ISet`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.ISet`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "IReadOnlyListOfString": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IReadOnlyList`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IReadOnlyList`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IReadOnlyList`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "IReadOnlyCollectionOfString": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IReadOnlyCollection`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IReadOnlyCollection`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IReadOnlyCollection`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "IEnumerableOfString": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IEnumerable`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IEnumerable`1[System.String]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IEnumerable`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "Roundtrip": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IDictionary`2[System.String,System.Object]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IDictionary`2[System.String,System.Object]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "NestedRoundtrip": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IDictionary`2[System.String,System.Object]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IDictionary`2[System.String,System.Object]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "Basic": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IDictionary`2[System.String,System.Object]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IDictionary`2[System.String,System.Object]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IDictionary`2[System.String,System.Object]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n       at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n       at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n       at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n       at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       --- End of inner exception stack trace ---\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: There was an error reflecting type 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[System.Collections.Generic.IDictionary`2[System.String,System.Object]]'. ---> System.InvalidOperationException: Cannot serialize member 'FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value' of type 'System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]', see inner exception for more details. ---> System.NotSupportedException: Cannot serialize member FeatureTests.On.Serializers.TestTypes.RootClassWithSingleProperty`1[[System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Value of type System.Collections.Generic.IDictionary`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] because it is an interface.\r\n   at System.Xml.Serialization.StructModel.CheckSupportedMember(TypeDesc typeDesc, MemberInfo member, Type type)\r\n   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)\r\n   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)\r\n   at System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(StructMapping mapping, StructModel model, Boolean openModel, String typeName, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String ns, Boolean openModel, XmlAttributes a, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute root, String defaultNamespace, RecursionLimiter limiter)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "ICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Collection<String> { \"A\", \"B\" }\r\n    Actual:   Collection<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Collection<String> { \"A\", \"B\" }\r\nActual:   Collection<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "ISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: HashSet<String> { \"A\", \"B\" }\r\n    Actual:   HashSet<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: HashSet<String> { \"A\", \"B\" }\r\nActual:   HashSet<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: { Value = A }\r\n    Actual:   { Value =  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: { Value = A }\r\nActual:   { Value =  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor cannot be serialized because it does not have a parameterless constructor.\r\n       at System.Xml.Serialization.TypeDesc.CheckSupported()\r\n       at System.Xml.Serialization.TypeScope.GetTypeDesc(Type type, MemberInfo source, Boolean directReference, Boolean throwOnError)\r\n       at System.Xml.Serialization.ModelScope.GetTypeModel(Type type, Boolean directReference)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor cannot be serialized because it does not have a parameterless constructor.\r\n   at System.Xml.Serialization.TypeDesc.CheckSupported()\r\n   at System.Xml.Serialization.TypeScope.GetTypeDesc(Type type, MemberInfo source, Boolean directReference, Boolean throwOnError)\r\n   at System.Xml.Serialization.ModelScope.GetTypeModel(Type type, Boolean directReference)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "CustomConstructorCalled": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor cannot be serialized because it does not have a parameterless constructor.\r\n       at System.Xml.Serialization.TypeDesc.CheckSupported()\r\n       at System.Xml.Serialization.TypeScope.GetTypeDesc(Type type, MemberInfo source, Boolean directReference, Boolean throwOnError)\r\n       at System.Xml.Serialization.ModelScope.GetTypeModel(Type type, Boolean directReference)\r\n       at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n       at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n    ",
        "error": "System.InvalidOperationException: FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor cannot be serialized because it does not have a parameterless constructor.\r\n   at System.Xml.Serialization.TypeDesc.CheckSupported()\r\n   at System.Xml.Serialization.TypeScope.GetTypeDesc(Type type, MemberInfo source, Boolean directReference, Boolean throwOnError)\r\n   at System.Xml.Serialization.ModelScope.GetTypeModel(Type type, Boolean directReference)\r\n   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace)\r\n   at System.Xml.Serialization.XmlSerializer..ctor(Type type, String defaultNamespace)\r\n"
      },
      "CastToInt32": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Xml.XmlNode[]' to 'int'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Xml.XmlNode[]' to 'int'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "CastToString": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Xml.XmlNode[]' to 'string'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Xml.XmlNode[]' to 'string'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "PropertyAccess": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Array' does not contain a definition for 'property'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'System.Array' does not contain a definition for 'property'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Xml.XmlNode[]' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'System.Xml.XmlNode[]' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      }
    }
  },
  {
    "name": "XSerializer",
    "url": "https://github.com/QuickenLoans/XSerializer",
    "version": "0.1.28",
    "supports": [
      "net40",
      "net40-Client",
      "net45"
    ],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "success"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "success"
      },
      "Uri": {
        "result": "success"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "success"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "success"
      },
      "HashSetOfString": {
        "result": "failure",
        "comment": "    System.InvalidProgramException: JIT Compiler encountered an internal limitation.\r\n       at Add_Invoker(Object , Object )\r\n       at XSerializer.ListSerializer`2.<>c__DisplayClassb.<.ctor>b__5(Object collection, Object item)\r\n       at XSerializer.ListSerializer`2.AddItemToCollection(Object collection, Object item)\r\n       at XSerializer.ListSerializer.DeserializeObject(XmlReader reader)\r\n       at XSerializer.CustomSerializer`1.DefaultConstructorHelper.SetElementPropertyValue(Boolean& shouldIssueRead)\r\n       at XSerializer.CustomSerializer`1.DeserializeObject(XmlReader reader)\r\n       at XSerializer.SerializationExtensions.DeserializeObject(IXmlSerializerInternal serializer, String xml)\r\n       at XSerializer.XmlSerializer`1.Deserialize(String xml)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.InvalidProgramException: JIT Compiler encountered an internal limitation.\r\n   at Add_Invoker(Object , Object )\r\n   at XSerializer.ListSerializer`2.<>c__DisplayClassb.<.ctor>b__5(Object collection, Object item)\r\n   at XSerializer.ListSerializer`2.AddItemToCollection(Object collection, Object item)\r\n   at XSerializer.ListSerializer.DeserializeObject(XmlReader reader)\r\n   at XSerializer.CustomSerializer`1.DefaultConstructorHelper.SetElementPropertyValue(Boolean& shouldIssueRead)\r\n   at XSerializer.CustomSerializer`1.DeserializeObject(XmlReader reader)\r\n   at XSerializer.SerializationExtensions.DeserializeObject(IXmlSerializerInternal serializer, String xml)\r\n   at XSerializer.XmlSerializer`1.Deserialize(String xml)\r\n   at lambda_method(Closure )\r\n"
      },
      "ISetOfString": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at XSerializer.DynamicMethodFactory.CreateDefaultConstructorFunc[T](Type type)\r\n       at XSerializer.ListSerializer..ctor(IXmlSerializerOptions options, String itemElementName)\r\n       at XSerializer.ListSerializer`2..ctor(IXmlSerializerOptions options, String itemElementName)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at XSerializer.DynamicMethodFactory.CreateDefaultConstructorFunc[T](Type type)\r\n   at XSerializer.ListSerializer..ctor(IXmlSerializerOptions options, String itemElementName)\r\n   at XSerializer.ListSerializer`2..ctor(IXmlSerializerOptions options, String itemElementName)\r\n"
      },
      "IReadOnlyListOfString": {
        "result": "success"
      },
      "IReadOnlyCollectionOfString": {
        "result": "success"
      },
      "IEnumerableOfString": {
        "result": "success"
      },
      "Roundtrip": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: value\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: value\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "NestedRoundtrip": {
        "result": "failure",
        "comment": "    System.InvalidOperationException: Unable to find serializable properties for type System.Collections.Generic.GenericEqualityComparer`1[System.String]\r\n       at XSerializer.CustomSerializer`1.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n       at XSerializer.SerializableProperty.WriteValue(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n       at XSerializer.CustomSerializer`1.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n       at XSerializer.DynamicSerializer.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n       at XSerializer.DictionarySerializer.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n       at XSerializer.SerializableProperty.WriteValue(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n       at XSerializer.CustomSerializer`1.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n       at XSerializer.SerializationExtensions.SerializeObject(IXmlSerializerInternal serializer, Object instance, Encoding encoding, Formatting formatting, ISerializeOptions options)\r\n       at lambda_method(Closure )\r\n    ",
        "error": "System.InvalidOperationException: Unable to find serializable properties for type System.Collections.Generic.GenericEqualityComparer`1[System.String]\r\n   at XSerializer.CustomSerializer`1.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n   at XSerializer.SerializableProperty.WriteValue(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n   at XSerializer.CustomSerializer`1.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n   at XSerializer.DynamicSerializer.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n   at XSerializer.DictionarySerializer.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n   at XSerializer.SerializableProperty.WriteValue(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n   at XSerializer.CustomSerializer`1.SerializeObject(SerializationXmlTextWriter writer, Object instance, ISerializeOptions options)\r\n   at XSerializer.SerializationExtensions.SerializeObject(IXmlSerializerInternal serializer, Object instance, Encoding encoding, Formatting formatting, ISerializeOptions options)\r\n   at lambda_method(Closure )\r\n"
      },
      "Basic": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: value\r\n    Actual:   (null)\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: value\r\nActual:   (null)\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\n    Expected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\n    Actual:   (null)\r\n       at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n       at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n    ",
        "error": "Xunit.Sdk.IsAssignableFromException: Assert.IsAssignableFrom() Failure\r\nExpected: System.Collections.Generic.IDictionary`2[System.String,System.Object]\r\nActual:   (null)\r\n   at Xunit.Assert.IsAssignableFrom(Type expectedType, Object object)\r\n   at Xunit.Assert.IsAssignableFrom[T](Object object)\r\n"
      },
      "ICollection": {
        "result": "success"
      },
      "ISet": {
        "result": "failure",
        "comment": "    System.NullReferenceException: Object reference not set to an instance of an object.\r\n       at XSerializer.DynamicMethodFactory.CreateDefaultConstructorFunc[T](Type type)\r\n       at XSerializer.ListSerializer..ctor(IXmlSerializerOptions options, String itemElementName)\r\n       at XSerializer.ListSerializer`2..ctor(IXmlSerializerOptions options, String itemElementName)\r\n    ",
        "error": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at XSerializer.DynamicMethodFactory.CreateDefaultConstructorFunc[T](Type type)\r\n   at XSerializer.ListSerializer..ctor(IXmlSerializerOptions options, String itemElementName)\r\n   at XSerializer.ListSerializer`2..ctor(IXmlSerializerOptions options, String itemElementName)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: { Value = A }\r\n    Actual:   { Value =  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: { Value = A }\r\nActual:   { Value =  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "success"
      },
      "CustomConstructorCalled": {
        "result": "success"
      },
      "CastToInt32": {
        "result": "success"
      },
      "CastToString": {
        "result": "success"
      },
      "PropertyAccess": {
        "result": "success"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'string' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: Cannot convert type 'string' to 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty<string>'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      }
    }
  },
  {
    "name": "YAXLib",
    "url": "https://github.com/sinairv/YAXLib",
    "version": "2.13",
    "supports": [
      "net20",
      "net35",
      "net40",
      "net40-Client",
      "net45",
      "win",
      "wpa81",
      "wp80",
      "sl50",
      "aspnetcore50",
      "MonoAndroid",
      "MonoTouch",
      "xamarinios10"
    ],
    "features": {
      "String": {
        "result": "success"
      },
      "Int32": {
        "result": "success"
      },
      "DateTime": {
        "result": "success"
      },
      "DateTimeOffset": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: 02-Aug-14 12:34:56 +03:00\r\n    Actual:   01-Jan-01 00:00:00 +00:00\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: 02-Aug-14 12:34:56 +03:00\r\nActual:   01-Jan-01 00:00:00 +00:00\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n"
      },
      "Uri": {
        "result": "failure",
        "comment": "    System.MissingMethodException: Constructor on type 'System.Uri' not found.\r\n       at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, StackCrawlMark& stackMark)\r\n       at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n       at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n       at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\r\n       at System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args)\r\n       at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n       at YAXLib.YAXSerializer.RetreiveElementValue(Object o, MemberWrapper member, String elemValue, XElement xelemValue)\r\n       at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n       at YAXLib.YAXSerializer.Deserialize(String input)\r\n    ",
        "error": "System.MissingMethodException: Constructor on type 'System.Uri' not found.\r\n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, StackCrawlMark& stackMark)\r\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\r\n   at System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args)\r\n   at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n   at YAXLib.YAXSerializer.RetreiveElementValue(Object o, MemberWrapper member, String elemValue, XElement xelemValue)\r\n   at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n   at YAXLib.YAXSerializer.Deserialize(String input)\r\n"
      },
      "ArrayOfString": {
        "result": "success"
      },
      "ArrayOfObject": {
        "result": "success"
      },
      "ListOfString": {
        "result": "success"
      },
      "IListOfString": {
        "result": "success"
      },
      "HashSetOfString": {
        "result": "success"
      },
      "ISetOfString": {
        "result": "success"
      },
      "IReadOnlyListOfString": {
        "result": "success"
      },
      "IReadOnlyCollectionOfString": {
        "result": "success"
      },
      "IEnumerableOfString": {
        "result": "success"
      },
      "Roundtrip": {
        "result": "success"
      },
      "NestedRoundtrip": {
        "result": "success"
      },
      "Basic": {
        "result": "failure",
        "comment": "    YAXLib.YAXCannotAddObjectToCollection: Could not add object ('[, ]') to the collection ('Value').\r\n       at YAXLib.YAXSerializer.OnExceptionOccurred(YAXException ex, YAXExceptionTypes exceptionType)\r\n       at YAXLib.YAXSerializer.DeserializeCollectionValue(Type colType, XElement xelemValue, XName memberAlias, YAXCollectionAttribute colAttrInstance)\r\n       at YAXLib.YAXSerializer.DeserializeCollectionMember(Object o, MemberWrapper member, Type colType, String elemValue, XElement xelemValue)\r\n       at YAXLib.YAXSerializer.RetreiveElementValue(Object o, MemberWrapper member, String elemValue, XElement xelemValue)\r\n       at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n       at YAXLib.YAXSerializer.Deserialize(String input)\r\n    ",
        "error": "YAXLib.YAXCannotAddObjectToCollection: Could not add object ('[, ]') to the collection ('Value').\r\n   at YAXLib.YAXSerializer.OnExceptionOccurred(YAXException ex, YAXExceptionTypes exceptionType)\r\n   at YAXLib.YAXSerializer.DeserializeCollectionValue(Type colType, XElement xelemValue, XName memberAlias, YAXCollectionAttribute colAttrInstance)\r\n   at YAXLib.YAXSerializer.DeserializeCollectionMember(Object o, MemberWrapper member, Type colType, String elemValue, XElement xelemValue)\r\n   at YAXLib.YAXSerializer.RetreiveElementValue(Object o, MemberWrapper member, String elemValue, XElement xelemValue)\r\n   at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n   at YAXLib.YAXSerializer.Deserialize(String input)\r\n"
      },
      "Nested": {
        "result": "failure",
        "comment": "    YAXLib.YAXCannotAddObjectToCollection: Could not add object ('[, ]') to the collection ('Value').\r\n       at YAXLib.YAXSerializer.OnExceptionOccurred(YAXException ex, YAXExceptionTypes exceptionType)\r\n       at YAXLib.YAXSerializer.DeserializeCollectionValue(Type colType, XElement xelemValue, XName memberAlias, YAXCollectionAttribute colAttrInstance)\r\n       at YAXLib.YAXSerializer.DeserializeCollectionMember(Object o, MemberWrapper member, Type colType, String elemValue, XElement xelemValue)\r\n       at YAXLib.YAXSerializer.RetreiveElementValue(Object o, MemberWrapper member, String elemValue, XElement xelemValue)\r\n       at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n       at YAXLib.YAXSerializer.Deserialize(String input)\r\n    ",
        "error": "YAXLib.YAXCannotAddObjectToCollection: Could not add object ('[, ]') to the collection ('Value').\r\n   at YAXLib.YAXSerializer.OnExceptionOccurred(YAXException ex, YAXExceptionTypes exceptionType)\r\n   at YAXLib.YAXSerializer.DeserializeCollectionValue(Type colType, XElement xelemValue, XName memberAlias, YAXCollectionAttribute colAttrInstance)\r\n   at YAXLib.YAXSerializer.DeserializeCollectionMember(Object o, MemberWrapper member, Type colType, String elemValue, XElement xelemValue)\r\n   at YAXLib.YAXSerializer.RetreiveElementValue(Object o, MemberWrapper member, String elemValue, XElement xelemValue)\r\n   at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n   at YAXLib.YAXSerializer.Deserialize(String input)\r\n"
      },
      "ICollection": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: Collection<String> { \"A\", \"B\" }\r\n    Actual:   Collection<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: Collection<String> { \"A\", \"B\" }\r\nActual:   Collection<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "ISet": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Position: First difference is at position 0\r\n    Expected: HashSet<String> { \"A\", \"B\" }\r\n    Actual:   HashSet<String> {  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nPosition: First difference is at position 0\r\nExpected: HashSet<String> { \"A\", \"B\" }\r\nActual:   HashSet<String> {  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "MutableClass": {
        "result": "failure",
        "comment": "    Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n    Expected: { Value = A }\r\n    Actual:   { Value =  }\r\n       at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n       at Xunit.Assert.Equal[T](T expected, T actual)\r\n    ",
        "error": "Xunit.Sdk.EqualException: Assert.Equal() Failure\r\nExpected: { Value = A }\r\nActual:   { Value =  }\r\n   at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer)\r\n   at Xunit.Assert.Equal[T](T expected, T actual)\r\n"
      },
      "CustomConstructorDeserialized": {
        "result": "failure",
        "comment": "    System.MissingMethodException: Constructor on type 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor' not found.\r\n       at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, StackCrawlMark& stackMark)\r\n       at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n       at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n       at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\r\n       at System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args)\r\n       at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n       at YAXLib.YAXSerializer.Deserialize(String input)\r\n    ",
        "error": "System.MissingMethodException: Constructor on type 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor' not found.\r\n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, StackCrawlMark& stackMark)\r\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\r\n   at System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args)\r\n   at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n   at YAXLib.YAXSerializer.Deserialize(String input)\r\n"
      },
      "CustomConstructorCalled": {
        "result": "failure",
        "comment": "    System.MissingMethodException: Constructor on type 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor' not found.\r\n       at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, StackCrawlMark& stackMark)\r\n       at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n       at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n       at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\r\n       at System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args)\r\n       at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n       at YAXLib.YAXSerializer.Deserialize(String input)\r\n    ",
        "error": "System.MissingMethodException: Constructor on type 'FeatureTests.On.Serializers.TestTypes.RootClassWithCustomConstructor' not found.\r\n   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, StackCrawlMark& stackMark)\r\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)\r\n   at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\r\n   at System.RuntimeType.InvokeMember(String name, BindingFlags bindingFlags, Binder binder, Object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)\r\n   at System.Type.InvokeMember(String name, BindingFlags invokeAttr, Binder binder, Object target, Object[] args)\r\n   at YAXLib.YAXSerializer.DeserializeBase(XElement baseElement)\r\n   at YAXLib.YAXSerializer.Deserialize(String input)\r\n"
      },
      "CastToInt32": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Specified cast is not valid.\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "System.InvalidCastException: Specified cast is not valid.\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "CastToString": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Object' to type 'System.String'.\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Object' to type 'System.String'.\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "PropertyAccess": {
        "result": "failure",
        "comment": "    Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'object' does not contain a definition for 'property'\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n       at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException: 'object' does not contain a definition for 'property'\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      },
      "CastToType": {
        "result": "failure",
        "comment": "    System.InvalidCastException: Unable to cast object of type 'System.Object' to type 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[System.String]'.\r\n       at CallSite.Target(Closure , CallSite , Object )\r\n    ",
        "error": "System.InvalidCastException: Unable to cast object of type 'System.Object' to type 'FeatureTests.On.Serializers.TestTypes.ClassWithSingleProperty`1[System.String]'.\r\n   at CallSite.Target(Closure , CallSite , Object )\r\n"
      }
    }
  }
]