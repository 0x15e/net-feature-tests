@using System.Linq
@using AshMind.Extensions
@using FeatureTests.Runner.Sources
@inherits FeatureTests.Runner.Outputs.Html.HtmlTemplateBase<FeatureTests.Runner.Outputs.Html.Models.HtmlResultModel>

@Html.Raw(Model.HtmlBeforeAll)

@foreach (var table in Model.Tables) {
<section>
  <h2 id="@Model.TableIdMap[table]">@table.DisplayName</h2>
  <div class="section-description">@Format.Description(table.Description)</div>
        
  <table>
    <tr>
      <th>Name</th>
      @foreach (var library in table.Libraries) {
        <th><span>@library.Name</span></th>
      }
    </tr>

    @foreach (var row in table.GetFeatureRows()) {
      var feature = row.Item1;
      var rowClass = (string)null;
      if (feature.Key == MetadataKeys.TotalFeature && !Model.TotalVisible) {
          rowClass = "total-hidden";
      }
      
    <tr class="@rowClass">
      <td class="row-name"><span title="@Format.Description(feature.Description)">@feature.Name</span></td>
      @foreach (var cell in row.Item2) {
        <td class="@Format.GetCssClassesForCell(cell)">
        @if (cell.HasDetails) {
            <span title="@cell.Details">@Format.DisplayValue(cell.DisplayValue)</span>
        }
        else if (cell.DisplayUri != null) {
            <a href="@cell.DisplayUri">@Format.DisplayValue(cell.DisplayValue)</a>
        }
        else {
            @Format.DisplayValue(cell.DisplayValue)
        }
        </td>
      }
    </tr>
    }
  </table>
</section>
}
      
@Html.Raw(Model.HtmlAfterAll)
    
<script type="text/javascript">
  var model = {
      libraryCount: @Model.Tables.First().Libraries.Count
  };
</script>